name: Web Client CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'web-client/**'
      - 'docker/web-client.Dockerfile'
      - 'docker/nginx.conf'
      - 'k8s/web-client.yaml'
      - '.github/workflows/web-client.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'web-client/**'
      - 'docker/web-client.Dockerfile'
      - 'docker/nginx.conf'
      - '.github/workflows/web-client.yml'

env:
  DOCKER_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: cahoots-web-client
  KUBE_NAMESPACE: cahoots

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web-client/package-lock.json

      - name: Install dependencies
        working-directory: web-client
        run: npm ci

      - name: Run linter
        working-directory: web-client
        run: npm run lint

      - name: Run tests
        working-directory: web-client
        run: npm run test

      - name: Build application
        working-directory: web-client
        run: npm run build

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry 
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/web-client.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Install Civo CLI
        run: curl -sL https://civo.com/get | sh

      - name: Configure Civo CLI
        run: |
          civo apikey add production-key ${{ secrets.CIVO_API_KEY }}
          civo kubernetes config cahoots-prod --save

      - name: Verify kubectl configuration
        run: |
          kubectl config current-context
          kubectl get nodes

      - name: Verify image pull secret
        run: |
          if ! kubectl get secret -n ${{ env.KUBE_NAMESPACE }} ghcr-pull-secret &> /dev/null; then
            echo "Error: ghcr-pull-secret not found in namespace ${{ env.KUBE_NAMESPACE }}"
            echo "Please run scripts/update_ghcr_secret.sh to create the secret"
            exit 1
          fi
          echo "Image pull secret verified"

      - name: Update deployment
        env:
          IMAGE_TAG: ${{ github.sha }}
          APP_DOMAIN: ${{ secrets.APP_DOMAIN }}
        run: |
          # Apply the deployment with envsubst
          envsubst < k8s/web-client.yaml | kubectl apply -f -
          
          # Update the image
          kubectl set image deployment/web-client -n ${{ env.KUBE_NAMESPACE }} web-client=${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          
          # Wait for rollout to complete
          kubectl rollout status deployment/web-client -n ${{ env.KUBE_NAMESPACE }} --timeout=300s