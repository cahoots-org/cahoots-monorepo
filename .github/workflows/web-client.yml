name: Web Client CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'web-client/**'
      - 'docker/web-client.Dockerfile'
      - 'docker/nginx.conf'
      - 'k8s/base/web-client.yaml'
      - '.github/workflows/web-client.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'web-client/**'
      - 'docker/web-client.Dockerfile'
      - 'docker/nginx.conf'
      - '.github/workflows/web-client.yml'

env:
  DOCKER_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: web-client
  KUBE_NAMESPACE: default

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web-client/package-lock.json

      - name: Install dependencies
        working-directory: web-client
        run: npm ci

      - name: Run linter
        working-directory: web-client
        run: npm run lint

      - name: Run tests
        working-directory: web-client
        run: npm run test

      - name: Build application
        working-directory: web-client
        run: npm run build

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/web-client.Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          chmod 600 kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          export IMAGE_TAG="${{ github.sha }}"
          export APP_DOMAIN="${{ secrets.APP_DOMAIN }}"
          envsubst < k8s/base/web-client.yaml | kubectl apply -f -
          kubectl rollout status deployment/web-client -n ${{ env.KUBE_NAMESPACE }} 