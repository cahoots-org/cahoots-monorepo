digraph ProjectKnowledge {
    // Graph settings
    rankdir=LR;
    node [shape=box, style=filled, fillcolor=white];
    
    // Core Systems
    subgraph cluster_security_domain {
        label="Security Domain"
        style=filled;
        fillcolor=lightyellow;
        
        RateLimiter [shape=component, label="RateLimiter\n(Coverage: 0.95)"]
        TokenManager [shape=component, label="TokenManager\n(Coverage: 0.95)"]
        RoleManager [shape=component, label="RoleManager\n(Coverage: 0.95)"]
        PolicyManager [shape=component, label="PolicyManager\n(Coverage: 0.90)"]
        
        TokenManager -> RoleManager [label="validates"]
        RoleManager -> PolicyManager [label="enforces"]
        RateLimiter -> TokenManager [label="protects"]
        PolicyManager -> RateLimiter [label="limits"]
    }

    // Service Layer
    subgraph cluster_service_domain {
        label="Service Domain"
        style=filled;
        fillcolor=lightcyan;

        MasterService [shape=component, label="MasterService\n(Coverage: 0.85)"]
        TeamService [shape=component, label="TeamService\n(Coverage: 0.85)"]
        ProjectService [shape=component, label="ProjectService\n(Coverage: 0.80)"]
        FederationService [shape=component, label="FederationService\n(Coverage: 0.70)"]
        BillingService [shape=component, label="BillingService\n(Coverage: 0.75)"]
        
        MasterService -> TeamService [label="configures"]
        TeamService -> ProjectService [label="manages"]
        FederationService -> TokenManager [label="validates identity"]
        BillingService -> ProjectService [label="limits access"]
    }

    // Event System
    subgraph cluster_event_system {
        label="Event System"
        style=filled;
        fillcolor=lightpink;

        Redis [shape=cylinder, label="Redis\nEvent Broker\n(Protected by Lock Pattern)"]
        ContextManager [shape=component, label="ContextManager\n(Coverage: 0.95)\n(Memory Protected)"]
        EventSystem [shape=component, label="EventSystem\n(Coverage: 0.95)\n(Retention Enforced)"]

        EventSystem -> Redis [label="publishes"]
        ContextManager -> Redis [label="tracks versions"]
    }

    // Patterns
    subgraph cluster_patterns {
        label="Active Patterns"
        style=filled;
        fillcolor=lightgreen;
        
        LockPattern [shape=hexagon, label="Lock Consistency Pattern\n(Success Rate: 0.67)"]
        CachePattern [shape=hexagon, label="Cache Lifecycle Pattern\n(Success Rate: 0.75)"]
        MemoryPattern [shape=hexagon, label="Memory Protection Pattern\n(Success Rate: 0.80)"]
    }

    // Pattern Applications
    LockPattern -> Redis [label="protects", style=dotted]
    CachePattern -> EventSystem [label="manages", style=dotted]
    MemoryPattern -> ContextManager [label="guards", style=dotted]

    // Technical Debt Areas (Resolved)
    subgraph cluster_tech_debt {
        label="Technical Debt"
        style=filled;
        fillcolor=lightgray;
        
        CircuitBreakerRaces [shape=octagon, label="Circuit Breaker Race Conditions\nRisk: Medium"]
        FederationTrust [shape=octagon, label="Federation Trust Chain\nRisk: Medium"]
    }

    // Technical Debt Relationships
    CircuitBreakerRaces -> MasterService [label="affects", style=dashed, color=red]
    FederationTrust -> FederationService [label="complicates", style=dashed, color=red]
} 