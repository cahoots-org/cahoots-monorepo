{"ast":null,"code":"/**\n * Logging utility that only outputs in development mode\n * This helps keep production builds clean while preserving debug information during development\n */const isDevelopment=process.env.NODE_ENV==='development';export const logger={log:function(){if(isDevelopment){console.log(...arguments);}},error:function(){if(isDevelopment){console.error(...arguments);}},warn:function(){if(isDevelopment){console.warn(...arguments);}},info:function(){if(isDevelopment){console.info(...arguments);}},debug:function(){if(isDevelopment){console.debug(...arguments);}}};","map":{"version":3,"names":["isDevelopment","process","env","NODE_ENV","logger","log","console","arguments","error","warn","info","debug"],"sources":["/app/src/utils/logger.js"],"sourcesContent":["/**\n * Logging utility that only outputs in development mode\n * This helps keep production builds clean while preserving debug information during development\n */\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\nexport const logger = {\n  log: (...args) => {\n    if (isDevelopment) {\n      console.log(...args);\n    }\n  },\n  \n  error: (...args) => {\n    if (isDevelopment) {\n      console.error(...args);\n    }\n  },\n  \n  warn: (...args) => {\n    if (isDevelopment) {\n      console.warn(...args);\n    }\n  },\n  \n  info: (...args) => {\n    if (isDevelopment) {\n      console.info(...args);\n    }\n  },\n  \n  debug: (...args) => {\n    if (isDevelopment) {\n      console.debug(...args);\n    }\n  }\n};"],"mappings":"AAAA;AACA;AACA;AACA,GAEA,KAAM,CAAAA,aAAa,CAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAE5D,MAAO,MAAM,CAAAC,MAAM,CAAG,CACpBC,GAAG,CAAE,QAAAA,CAAA,CAAa,CAChB,GAAIL,aAAa,CAAE,CACjBM,OAAO,CAACD,GAAG,CAAC,GAAAE,SAAO,CAAC,CACtB,CACF,CAAC,CAEDC,KAAK,CAAE,QAAAA,CAAA,CAAa,CAClB,GAAIR,aAAa,CAAE,CACjBM,OAAO,CAACE,KAAK,CAAC,GAAAD,SAAO,CAAC,CACxB,CACF,CAAC,CAEDE,IAAI,CAAE,QAAAA,CAAA,CAAa,CACjB,GAAIT,aAAa,CAAE,CACjBM,OAAO,CAACG,IAAI,CAAC,GAAAF,SAAO,CAAC,CACvB,CACF,CAAC,CAEDG,IAAI,CAAE,QAAAA,CAAA,CAAa,CACjB,GAAIV,aAAa,CAAE,CACjBM,OAAO,CAACI,IAAI,CAAC,GAAAH,SAAO,CAAC,CACvB,CACF,CAAC,CAEDI,KAAK,CAAE,QAAAA,CAAA,CAAa,CAClB,GAAIX,aAAa,CAAE,CACjBM,OAAO,CAACK,KAAK,CAAC,GAAAJ,SAAO,CAAC,CACxB,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}