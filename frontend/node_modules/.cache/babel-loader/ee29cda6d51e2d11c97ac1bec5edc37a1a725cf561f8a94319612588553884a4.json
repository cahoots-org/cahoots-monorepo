{"ast":null,"code":"var _window$CAHOOTS_CONFI;import axios from'axios';import loadingManager from'./loadingService';// Get API URL from runtime config or fallback to relative URL\nconst API_URL=((_window$CAHOOTS_CONFI=window.CAHOOTS_CONFIG)===null||_window$CAHOOTS_CONFI===void 0?void 0:_window$CAHOOTS_CONFI.API_URL)||'/api';class UnifiedApiClient{constructor(){// Create Axios instance with base configuration\nthis.client=axios.create({baseURL:API_URL,timeout:30000,withCredentials:true,// Important: Always send cookies with requests\nheaders:{'Content-Type':'application/json','Accept':'application/json','X-Requested-With':'XMLHttpRequest'}});this.setupInterceptors();}setupInterceptors(){// Request interceptor - add auth headers\nthis.client.interceptors.request.use(config=>{// Get token from httpOnly cookie via API call if needed\n// For now, fallback to localStorage but migrate to cookies\nconst token=this.getAuthToken();if(token){config.headers.Authorization=`Bearer ${token}`;}// Add user context header if available\nconst user=this.getCurrentUser();if(user!==null&&user!==void 0&&user.id){config.headers['X-User-ID']=user.id;}return config;},error=>Promise.reject(error));// Response interceptor - handle errors and token refresh\nthis.client.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{await this.refreshToken();const token=this.getAuthToken();originalRequest.headers.Authorization=`Bearer ${token}`;return this.client(originalRequest);}catch(refreshError){this.handleAuthError();return Promise.reject(error);}}return Promise.reject(this.enhanceError(error));});}// Enhanced error with user-friendly messages\nenhanceError(error){const enhanced={...error};if(error.response){// Server responded with error status\nenhanced.userMessage=this.getErrorMessage(error.response.status,error.response.data);}else if(error.request){// Network error\nenhanced.userMessage='Network error. Please check your connection.';}else{// Request setup error\nenhanced.userMessage='Request failed. Please try again.';}return enhanced;}getErrorMessage(status,data){const statusMessages={400:'Invalid request. Please check your input.',401:'Please log in to continue.',403:'You don\\'t have permission to perform this action.',404:'The requested resource was not found.',500:'Server error. Please try again later.',503:'Service temporarily unavailable. Please try again later.'};return(data===null||data===void 0?void 0:data.detail)||(data===null||data===void 0?void 0:data.message)||statusMessages[status]||'An error occurred.';}// Auth token management (to be migrated to httpOnly cookies)\ngetAuthToken(){const token=localStorage.getItem('token');if(token){return token;}// Check if user has explicitly logged out\nconst hasLoggedOut=localStorage.getItem('has_logged_out')==='true';if(hasLoggedOut){return null;}// Development bypass for when no real token is available\nif(process.env.NODE_ENV==='development'||window.location.hostname==='localhost'){return'dev-bypass-token';}return null;}setAuthToken(token){if(token){localStorage.setItem('token',token);// Update the axios client default headers immediately\nthis.client.defaults.headers.common['Authorization']=`Bearer ${token}`;}else{localStorage.removeItem('token');// Remove authorization header\ndelete this.client.defaults.headers.common['Authorization'];}}getCurrentUser(){try{const userStr=localStorage.getItem('user');return userStr?JSON.parse(userStr):null;}catch{return null;}}async refreshToken(){// Use a separate axios instance to avoid interceptor loops\nconst refreshClient=axios.create({baseURL:API_URL,withCredentials:true,// Important for cookies\ntimeout:10000});try{// In development, include the dev-bypass-token in the header\nconst headers={};const currentToken=this.getAuthToken();if(currentToken==='dev-bypass-token'){headers.Authorization=`Bearer ${currentToken}`;}// Get refresh token from localStorage\nconst storedRefreshToken=localStorage.getItem('refresh_token');// Make request to refresh token endpoint with refresh token in body\nconst response=await refreshClient.post('/auth/refresh-token',{refresh_token:storedRefreshToken},{headers});const{access_token,refresh_token:newRefreshToken}=response.data;if(!access_token){throw new Error('No access token returned');}this.setAuthToken(access_token);// Store new refresh token if provided\nif(newRefreshToken){localStorage.setItem('refresh_token',newRefreshToken);}// Fetch user data with new token to ensure auth context is updated\ntry{const userResponse=await this.client.get('/auth/me');if(userResponse.data){localStorage.setItem('user',JSON.stringify(userResponse.data));}}catch(userError){// Failed to refresh user data\n}return access_token;}catch(error){// Token refresh failed\n// Clear invalid tokens\nlocalStorage.removeItem('token');localStorage.removeItem('refresh_token');localStorage.removeItem('user');throw error;}}handleAuthError(){this.setAuthToken(null);localStorage.removeItem('user');// Use React Router navigation instead of direct window.location\n// This will be handled by the auth context\nif(window.__CAHOOTS_NAVIGATE){window.__CAHOOTS_NAVIGATE('/login');}else{// Fallback for cases where navigate is not available\nwindow.location.href='/login';}}// HTTP Methods with consistent error handling\nasync get(url){let config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await this.client.get(url,config);return response.data;}catch(error){throw this.enhanceError(error);}}async post(url,data){let config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{const response=await this.client.post(url,data,config);return response.data;}catch(error){throw this.enhanceError(error);}}async patch(url,data){let config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{const response=await this.client.patch(url,data,config);return response.data;}catch(error){throw this.enhanceError(error);}}async put(url,data){let config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{const response=await this.client.put(url,data,config);return response.data;}catch(error){throw this.enhanceError(error);}}async delete(url){let config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await this.client.delete(url,config);return response.data;}catch(error){throw this.enhanceError(error);}}// Methods with loading state management\nasync getWithLoading(url,loadingType){let config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};loadingManager.setLoading(loadingType,true);try{return await this.get(url,config);}finally{loadingManager.setLoading(loadingType,false);}}async postWithLoading(url,data,loadingType){let config=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};loadingManager.setLoading(loadingType,true);try{return await this.post(url,data,config);}finally{loadingManager.setLoading(loadingType,false);}}async patchWithLoading(url,data,loadingType){let config=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};loadingManager.setLoading(loadingType,true);try{return await this.patch(url,data,config);}finally{loadingManager.setLoading(loadingType,false);}}// Specialized methods for common operations\nasync getTasks(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return this.get('/tasks',{params});}async getTask(taskId){return this.get(`/tasks/${taskId}`);}async getTaskTree(taskId){return this.get(`/tasks/${taskId}/tree`);}async createTask(taskData){return this.post('/tasks',taskData);}async updateTask(taskId,updates){return this.patch(`/tasks/${taskId}`,updates);}async deleteTask(taskId){return this.delete(`/tasks/${taskId}`);}async restartDecomposition(taskId,restartData){return this.post(`/tasks/${taskId}/restart-decomposition`,restartData);}async getTaskStats(){let topLevelOnly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;return this.get('/tasks/stats',{params:{top_level_only:topLevelOnly}});}}// Export singleton instance\nconst apiClient=new UnifiedApiClient();export default apiClient;","map":{"version":3,"names":["axios","loadingManager","API_URL","_window$CAHOOTS_CONFI","window","CAHOOTS_CONFIG","UnifiedApiClient","constructor","client","create","baseURL","timeout","withCredentials","headers","setupInterceptors","interceptors","request","use","config","token","getAuthToken","Authorization","user","getCurrentUser","id","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","refreshError","handleAuthError","enhanceError","enhanced","userMessage","getErrorMessage","data","statusMessages","detail","message","localStorage","getItem","hasLoggedOut","process","env","NODE_ENV","location","hostname","setAuthToken","setItem","defaults","common","removeItem","userStr","JSON","parse","refreshClient","currentToken","storedRefreshToken","post","refresh_token","access_token","newRefreshToken","Error","userResponse","get","stringify","userError","__CAHOOTS_NAVIGATE","href","url","arguments","length","undefined","patch","put","delete","getWithLoading","loadingType","setLoading","postWithLoading","patchWithLoading","getTasks","params","getTask","taskId","getTaskTree","createTask","taskData","updateTask","updates","deleteTask","restartDecomposition","restartData","getTaskStats","topLevelOnly","top_level_only","apiClient"],"sources":["/app/src/services/unifiedApiClient.js"],"sourcesContent":["import axios from 'axios';\nimport loadingManager from './loadingService';\n\n// Get API URL from runtime config or fallback to relative URL\nconst API_URL = window.CAHOOTS_CONFIG?.API_URL || '/api';\n\nclass UnifiedApiClient {\n  constructor() {\n    // Create Axios instance with base configuration\n    this.client = axios.create({\n      baseURL: API_URL,\n      timeout: 30000,\n      withCredentials: true, // Important: Always send cookies with requests\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    });\n\n    this.setupInterceptors();\n  }\n\n  setupInterceptors() {\n    // Request interceptor - add auth headers\n    this.client.interceptors.request.use(\n      (config) => {\n        // Get token from httpOnly cookie via API call if needed\n        // For now, fallback to localStorage but migrate to cookies\n        const token = this.getAuthToken();\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n\n        // Add user context header if available\n        const user = this.getCurrentUser();\n        if (user?.id) {\n          config.headers['X-User-ID'] = user.id;\n        }\n\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    // Response interceptor - handle errors and token refresh\n    this.client.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config;\n\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n          \n          try {\n            await this.refreshToken();\n            const token = this.getAuthToken();\n            originalRequest.headers.Authorization = `Bearer ${token}`;\n            return this.client(originalRequest);\n          } catch (refreshError) {\n            this.handleAuthError();\n            return Promise.reject(error);\n          }\n        }\n\n        return Promise.reject(this.enhanceError(error));\n      }\n    );\n  }\n\n  // Enhanced error with user-friendly messages\n  enhanceError(error) {\n    const enhanced = { ...error };\n    \n    if (error.response) {\n      // Server responded with error status\n      enhanced.userMessage = this.getErrorMessage(error.response.status, error.response.data);\n    } else if (error.request) {\n      // Network error\n      enhanced.userMessage = 'Network error. Please check your connection.';\n    } else {\n      // Request setup error\n      enhanced.userMessage = 'Request failed. Please try again.';\n    }\n    \n    return enhanced;\n  }\n\n  getErrorMessage(status, data) {\n    const statusMessages = {\n      400: 'Invalid request. Please check your input.',\n      401: 'Please log in to continue.',\n      403: 'You don\\'t have permission to perform this action.',\n      404: 'The requested resource was not found.',\n      500: 'Server error. Please try again later.',\n      503: 'Service temporarily unavailable. Please try again later.'\n    };\n    \n    return data?.detail || data?.message || statusMessages[status] || 'An error occurred.';\n  }\n\n  // Auth token management (to be migrated to httpOnly cookies)\n  getAuthToken() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      return token;\n    }\n    \n    // Check if user has explicitly logged out\n    const hasLoggedOut = localStorage.getItem('has_logged_out') === 'true';\n    if (hasLoggedOut) {\n      return null;\n    }\n    \n    // Development bypass for when no real token is available\n    if (process.env.NODE_ENV === 'development' || window.location.hostname === 'localhost') {\n      return 'dev-bypass-token';\n    }\n    \n    return null;\n  }\n\n  setAuthToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n      // Update the axios client default headers immediately\n      this.client.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      localStorage.removeItem('token');\n      // Remove authorization header\n      delete this.client.defaults.headers.common['Authorization'];\n    }\n  }\n\n  getCurrentUser() {\n    try {\n      const userStr = localStorage.getItem('user');\n      return userStr ? JSON.parse(userStr) : null;\n    } catch {\n      return null;\n    }\n  }\n\n  async refreshToken() {\n    // Use a separate axios instance to avoid interceptor loops\n    const refreshClient = axios.create({\n      baseURL: API_URL,\n      withCredentials: true, // Important for cookies\n      timeout: 10000\n    });\n    \n    try {\n      \n      // In development, include the dev-bypass-token in the header\n      const headers = {};\n      const currentToken = this.getAuthToken();\n      if (currentToken === 'dev-bypass-token') {\n        headers.Authorization = `Bearer ${currentToken}`;\n      }\n      \n      // Get refresh token from localStorage\n      const storedRefreshToken = localStorage.getItem('refresh_token');\n      \n      // Make request to refresh token endpoint with refresh token in body\n      const response = await refreshClient.post('/auth/refresh-token', \n        { refresh_token: storedRefreshToken }, \n        { headers }\n      );\n      const { access_token, refresh_token: newRefreshToken } = response.data;\n      \n      if (!access_token) {\n        throw new Error('No access token returned');\n      }\n      \n      this.setAuthToken(access_token);\n      \n      // Store new refresh token if provided\n      if (newRefreshToken) {\n        localStorage.setItem('refresh_token', newRefreshToken);\n      }\n      \n      // Fetch user data with new token to ensure auth context is updated\n      try {\n        const userResponse = await this.client.get('/auth/me');\n        if (userResponse.data) {\n          localStorage.setItem('user', JSON.stringify(userResponse.data));\n        }\n      } catch (userError) {\n        // Failed to refresh user data\n      }\n      \n      return access_token;\n    } catch (error) {\n      // Token refresh failed\n      // Clear invalid tokens\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user');\n      throw error;\n    }\n  }\n\n  handleAuthError() {\n    this.setAuthToken(null);\n    localStorage.removeItem('user');\n    \n    // Use React Router navigation instead of direct window.location\n    // This will be handled by the auth context\n    if (window.__CAHOOTS_NAVIGATE) {\n      window.__CAHOOTS_NAVIGATE('/login');\n    } else {\n      // Fallback for cases where navigate is not available\n      window.location.href = '/login';\n    }\n  }\n\n  // HTTP Methods with consistent error handling\n  async get(url, config = {}) {\n    try {\n      const response = await this.client.get(url, config);\n      return response.data;\n    } catch (error) {\n      throw this.enhanceError(error);\n    }\n  }\n\n  async post(url, data, config = {}) {\n    try {\n      const response = await this.client.post(url, data, config);\n      return response.data;\n    } catch (error) {\n      throw this.enhanceError(error);\n    }\n  }\n\n  async patch(url, data, config = {}) {\n    try {\n      const response = await this.client.patch(url, data, config);\n      return response.data;\n    } catch (error) {\n      throw this.enhanceError(error);\n    }\n  }\n\n  async put(url, data, config = {}) {\n    try {\n      const response = await this.client.put(url, data, config);\n      return response.data;\n    } catch (error) {\n      throw this.enhanceError(error);\n    }\n  }\n\n  async delete(url, config = {}) {\n    try {\n      const response = await this.client.delete(url, config);\n      return response.data;\n    } catch (error) {\n      throw this.enhanceError(error);\n    }\n  }\n\n  // Methods with loading state management\n  async getWithLoading(url, loadingType, config = {}) {\n    loadingManager.setLoading(loadingType, true);\n    try {\n      return await this.get(url, config);\n    } finally {\n      loadingManager.setLoading(loadingType, false);\n    }\n  }\n\n  async postWithLoading(url, data, loadingType, config = {}) {\n    loadingManager.setLoading(loadingType, true);\n    try {\n      return await this.post(url, data, config);\n    } finally {\n      loadingManager.setLoading(loadingType, false);\n    }\n  }\n\n  async patchWithLoading(url, data, loadingType, config = {}) {\n    loadingManager.setLoading(loadingType, true);\n    try {\n      return await this.patch(url, data, config);\n    } finally {\n      loadingManager.setLoading(loadingType, false);\n    }\n  }\n\n  // Specialized methods for common operations\n  async getTasks(params = {}) {\n    return this.get('/tasks', { params });\n  }\n\n  async getTask(taskId) {\n    return this.get(`/tasks/${taskId}`);\n  }\n\n  async getTaskTree(taskId) {\n    return this.get(`/tasks/${taskId}/tree`);\n  }\n\n  async createTask(taskData) {\n    return this.post('/tasks', taskData);\n  }\n\n  async updateTask(taskId, updates) {\n    return this.patch(`/tasks/${taskId}`, updates);\n  }\n\n  async deleteTask(taskId) {\n    return this.delete(`/tasks/${taskId}`);\n  }\n\n  async restartDecomposition(taskId, restartData) {\n    return this.post(`/tasks/${taskId}/restart-decomposition`, restartData);\n  }\n\n  async getTaskStats(topLevelOnly = true) {\n    return this.get('/tasks/stats', { \n      params: { top_level_only: topLevelOnly } \n    });\n  }\n}\n\n// Export singleton instance\nconst apiClient = new UnifiedApiClient();\nexport default apiClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}