{"ast":null,"code":"// Date utility functions for consistent formatting across components\n/**\n * Format a date string for display, showing time for today's dates\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date string\n */export const formatTaskDate=dateString=>{if(!dateString)return'';const date=new Date(dateString);const now=new Date();const diffInDays=Math.floor((now-date)/(1000*60*60*24));if(diffInDays===0){// For today's tasks, show time to distinguish them\nconst timeString=date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit',hour12:true});return`Today ${timeString}`;}if(diffInDays===1)return'Yesterday';if(diffInDays<7)return`${diffInDays} days ago`;return date.toLocaleDateString();};/**\n * Format a date string for display in detailed views\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date and time string\n */export const formatDetailedDate=dateString=>{if(!dateString)return'';const date=new Date(dateString);const now=new Date();const diffInDays=Math.floor((now-date)/(1000*60*60*24));if(diffInDays===0){const timeString=date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit',hour12:true});return`Today at ${timeString}`;}if(diffInDays===1){const timeString=date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit',hour12:true});return`Yesterday at ${timeString}`;}// For older dates, show both date and time\nreturn date.toLocaleDateString()+' at '+date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit',hour12:true});};","map":{"version":3,"names":["formatTaskDate","dateString","date","Date","now","diffInDays","Math","floor","timeString","toLocaleTimeString","hour","minute","hour12","toLocaleDateString","formatDetailedDate"],"sources":["/app/src/utils/dateUtils.js"],"sourcesContent":["// Date utility functions for consistent formatting across components\n\n/**\n * Format a date string for display, showing time for today's dates\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date string\n */\nexport const formatTaskDate = (dateString) => {\n  if (!dateString) return '';\n  \n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInDays = Math.floor((now - date) / (1000 * 60 * 60 * 24));\n  \n  if (diffInDays === 0) {\n    // For today's tasks, show time to distinguish them\n    const timeString = date.toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit',\n      hour12: true \n    });\n    return `Today ${timeString}`;\n  }\n  \n  if (diffInDays === 1) return 'Yesterday';\n  if (diffInDays < 7) return `${diffInDays} days ago`;\n  \n  return date.toLocaleDateString();\n};\n\n/**\n * Format a date string for display in detailed views\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date and time string\n */\nexport const formatDetailedDate = (dateString) => {\n  if (!dateString) return '';\n  \n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInDays = Math.floor((now - date) / (1000 * 60 * 60 * 24));\n  \n  if (diffInDays === 0) {\n    const timeString = date.toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit',\n      hour12: true \n    });\n    return `Today at ${timeString}`;\n  }\n  \n  if (diffInDays === 1) {\n    const timeString = date.toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit',\n      hour12: true \n    });\n    return `Yesterday at ${timeString}`;\n  }\n  \n  // For older dates, show both date and time\n  return date.toLocaleDateString() + ' at ' + date.toLocaleTimeString([], { \n    hour: '2-digit', \n    minute: '2-digit',\n    hour12: true \n  });\n};"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAA,cAAc,CAAIC,UAAU,EAAK,CAC5C,GAAI,CAACA,UAAU,CAAE,MAAO,EAAE,CAE1B,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,UAAU,CAAC,CACjC,KAAM,CAAAG,GAAG,CAAG,GAAI,CAAAD,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAE,UAAU,CAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,GAAG,CAAGF,IAAI,GAAK,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAAC,CAEnE,GAAIG,UAAU,GAAK,CAAC,CAAE,CACpB;AACA,KAAM,CAAAG,UAAU,CAAGN,IAAI,CAACO,kBAAkB,CAAC,EAAE,CAAE,CAC7CC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,IACV,CAAC,CAAC,CACF,MAAO,SAASJ,UAAU,EAAE,CAC9B,CAEA,GAAIH,UAAU,GAAK,CAAC,CAAE,MAAO,WAAW,CACxC,GAAIA,UAAU,CAAG,CAAC,CAAE,MAAO,GAAGA,UAAU,WAAW,CAEnD,MAAO,CAAAH,IAAI,CAACW,kBAAkB,CAAC,CAAC,CAClC,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,kBAAkB,CAAIb,UAAU,EAAK,CAChD,GAAI,CAACA,UAAU,CAAE,MAAO,EAAE,CAE1B,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,UAAU,CAAC,CACjC,KAAM,CAAAG,GAAG,CAAG,GAAI,CAAAD,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAE,UAAU,CAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,GAAG,CAAGF,IAAI,GAAK,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAAC,CAEnE,GAAIG,UAAU,GAAK,CAAC,CAAE,CACpB,KAAM,CAAAG,UAAU,CAAGN,IAAI,CAACO,kBAAkB,CAAC,EAAE,CAAE,CAC7CC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,IACV,CAAC,CAAC,CACF,MAAO,YAAYJ,UAAU,EAAE,CACjC,CAEA,GAAIH,UAAU,GAAK,CAAC,CAAE,CACpB,KAAM,CAAAG,UAAU,CAAGN,IAAI,CAACO,kBAAkB,CAAC,EAAE,CAAE,CAC7CC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,IACV,CAAC,CAAC,CACF,MAAO,gBAAgBJ,UAAU,EAAE,CACrC,CAEA;AACA,MAAO,CAAAN,IAAI,CAACW,kBAAkB,CAAC,CAAC,CAAG,MAAM,CAAGX,IAAI,CAACO,kBAAkB,CAAC,EAAE,CAAE,CACtEC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,IACV,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}