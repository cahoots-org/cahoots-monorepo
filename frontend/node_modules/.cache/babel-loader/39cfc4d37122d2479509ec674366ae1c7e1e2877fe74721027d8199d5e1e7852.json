{"ast":null,"code":"import{useEffect}from'react';import{useLocation}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{useSettings}from'../contexts/SettingsContext';/**\n * Component that syncs user authentication state with settings context\n * This bridges the AuthContext and SettingsContext to enable user-specific settings\n */export const UserSettingsSync=()=>{const{user,loading}=useAuth();const{loadUserSettings}=useSettings();const location=useLocation();// Sync settings whenever user, loading state, or location changes\nuseEffect(()=>{// Only sync after auth has finished loading\nif(loading){// Auth still loading, waiting...\nreturn;}// Auth loaded, syncing settings\n// Load settings for the current user (or reset to defaults if no user)\nloadUserSettings((user===null||user===void 0?void 0:user.id)||null);},[user===null||user===void 0?void 0:user.id,loading,loadUserSettings,location.pathname,user]);// This component doesn't render anything\nreturn null;};","map":{"version":3,"names":["useEffect","useLocation","useAuth","useSettings","UserSettingsSync","user","loading","loadUserSettings","location","id","pathname"],"sources":["/app/src/components/UserSettingsSync.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSettings } from '../contexts/SettingsContext';\n\n/**\n * Component that syncs user authentication state with settings context\n * This bridges the AuthContext and SettingsContext to enable user-specific settings\n */\nexport const UserSettingsSync = () => {\n  const { user, loading } = useAuth();\n  const { loadUserSettings } = useSettings();\n  const location = useLocation();\n\n  // Sync settings whenever user, loading state, or location changes\n  useEffect(() => {\n    \n    // Only sync after auth has finished loading\n    if (loading) {\n      // Auth still loading, waiting...\n      return;\n    }\n\n    // Auth loaded, syncing settings\n    \n    // Load settings for the current user (or reset to defaults if no user)\n    loadUserSettings(user?.id || null);\n  }, [user?.id, loading, loadUserSettings, location.pathname, user]);\n\n  // This component doesn't render anything\n  return null;\n};"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,OAAO,KAAQ,yBAAyB,CACjD,OAASC,WAAW,KAAQ,6BAA6B,CAEzD;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGJ,OAAO,CAAC,CAAC,CACnC,KAAM,CAAEK,gBAAiB,CAAC,CAAGJ,WAAW,CAAC,CAAC,CAC1C,KAAM,CAAAK,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAE9B;AACAD,SAAS,CAAC,IAAM,CAEd;AACA,GAAIM,OAAO,CAAE,CACX;AACA,OACF,CAEA;AAEA;AACAC,gBAAgB,CAAC,CAAAF,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEI,EAAE,GAAI,IAAI,CAAC,CACpC,CAAC,CAAE,CAACJ,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEI,EAAE,CAAEH,OAAO,CAAEC,gBAAgB,CAAEC,QAAQ,CAACE,QAAQ,CAAEL,IAAI,CAAC,CAAC,CAElE;AACA,MAAO,KAAI,CACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}