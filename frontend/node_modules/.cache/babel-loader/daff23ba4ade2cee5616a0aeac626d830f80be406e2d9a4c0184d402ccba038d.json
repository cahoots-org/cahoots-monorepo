{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{Text,tokens}from'../design-system';/**\n * ProtectedRoute component that redirects to login page if user is not authenticated\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{isAuthenticated,loading}=useAuth();const location=useLocation();// Show loading spinner while checking authentication status\nif(loading){return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center',minHeight:'100vh',flexDirection:'column',gap:tokens.spacing[4],backgroundColor:tokens.colors.dark.bg},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'48px',height:'48px',border:`4px solid ${tokens.colors.dark.border}`,borderTop:`4px solid ${tokens.colors.primary[500]}`,borderRadius:tokens.borderRadius.full,animation:'spin 1s linear infinite'}}),/*#__PURE__*/_jsx(Text,{style:{color:tokens.colors.dark.muted},children:\"Checking authentication...\"})]});}// Redirect to login if not authenticated\nconst authenticated=isAuthenticated();if(!authenticated){// Not authenticated, redirecting to login\n// Save the current location to redirect back after login\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location},replace:true});}// Render children if authenticated\nreturn children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","Text","tokens","jsx","_jsx","jsxs","_jsxs","ProtectedRoute","_ref","children","isAuthenticated","loading","location","style","display","alignItems","justifyContent","minHeight","flexDirection","gap","spacing","backgroundColor","colors","dark","bg","width","height","border","borderTop","primary","borderRadius","full","animation","color","muted","authenticated","to","state","from","replace"],"sources":["/app/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Text, tokens } from '../design-system';\n\n/**\n * ProtectedRoute component that redirects to login page if user is not authenticated\n */\nconst ProtectedRoute = ({ children }) => {\n  const { isAuthenticated, loading } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication status\n  if (loading) {\n    return (\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '100vh',\n        flexDirection: 'column',\n        gap: tokens.spacing[4],\n        backgroundColor: tokens.colors.dark.bg,\n      }}>\n        <div style={{\n          width: '48px',\n          height: '48px',\n          border: `4px solid ${tokens.colors.dark.border}`,\n          borderTop: `4px solid ${tokens.colors.primary[500]}`,\n          borderRadius: tokens.borderRadius.full,\n          animation: 'spin 1s linear infinite',\n        }} />\n        <Text style={{ color: tokens.colors.dark.muted }}>\n          Checking authentication...\n        </Text>\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated\n  const authenticated = isAuthenticated();\n  \n  if (!authenticated) {\n    // Not authenticated, redirecting to login\n    // Save the current location to redirect back after login\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Render children if authenticated\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,OAAO,KAAQ,yBAAyB,CACjD,OAASC,IAAI,CAAEC,MAAM,KAAQ,kBAAkB,CAE/C;AACA;AACA,GAFA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGA,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,eAAe,CAAEC,OAAQ,CAAC,CAAGX,OAAO,CAAC,CAAC,CAC9C,KAAM,CAAAY,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B;AACA,GAAIY,OAAO,CAAE,CACX,mBACEL,KAAA,QAAKO,KAAK,CAAE,CACVC,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBC,SAAS,CAAE,OAAO,CAClBC,aAAa,CAAE,QAAQ,CACvBC,GAAG,CAAEjB,MAAM,CAACkB,OAAO,CAAC,CAAC,CAAC,CACtBC,eAAe,CAAEnB,MAAM,CAACoB,MAAM,CAACC,IAAI,CAACC,EACtC,CAAE,CAAAf,QAAA,eACAL,IAAA,QAAKS,KAAK,CAAE,CACVY,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdC,MAAM,CAAE,aAAazB,MAAM,CAACoB,MAAM,CAACC,IAAI,CAACI,MAAM,EAAE,CAChDC,SAAS,CAAE,aAAa1B,MAAM,CAACoB,MAAM,CAACO,OAAO,CAAC,GAAG,CAAC,EAAE,CACpDC,YAAY,CAAE5B,MAAM,CAAC4B,YAAY,CAACC,IAAI,CACtCC,SAAS,CAAE,yBACb,CAAE,CAAE,CAAC,cACL5B,IAAA,CAACH,IAAI,EAACY,KAAK,CAAE,CAAEoB,KAAK,CAAE/B,MAAM,CAACoB,MAAM,CAACC,IAAI,CAACW,KAAM,CAAE,CAAAzB,QAAA,CAAC,4BAElD,CAAM,CAAC,EACJ,CAAC,CAEV,CAEA;AACA,KAAM,CAAA0B,aAAa,CAAGzB,eAAe,CAAC,CAAC,CAEvC,GAAI,CAACyB,aAAa,CAAE,CAClB;AACA;AACA,mBAAO/B,IAAA,CAACN,QAAQ,EAACsC,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAE1B,QAAS,CAAE,CAAC2B,OAAO,MAAE,CAAC,CACpE,CAEA;AACA,MAAO,CAAA9B,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}