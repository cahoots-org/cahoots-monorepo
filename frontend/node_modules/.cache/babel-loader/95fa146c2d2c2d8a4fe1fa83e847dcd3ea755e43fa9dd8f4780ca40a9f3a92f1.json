{"ast":null,"code":"// Professional Tree Visualization - Interactive task tree using design system\nimport React,{useState,useMemo,useEffect}from'react';import{Card,Button,IconButton,Text,Badge,ChevronDownIcon,ChevronRightIcon,CheckIcon,PlayIcon,ClockIcon,DocumentIcon,PlusIcon,XCircleIcon,tokens}from'../design-system';import AddTaskModal from'./AddTaskModal';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TreeVisualization=_ref=>{let{taskTree,onTaskSelect,onRefreshTree}=_ref;// Initialize expanded nodes to include all nodes by default\nconst[expandedNodes,setExpandedNodes]=useState(()=>{if(!taskTree)return new Set();const allNodeIds=new Set();const collectNodeIds=node=>{allNodeIds.add(node.task_id);if(node.children){node.children.forEach(collectNodeIds);}};collectNodeIds(taskTree);return allNodeIds;});const[selectedNode,setSelectedNode]=useState(null);const[showAddTaskModal,setShowAddTaskModal]=useState(false);const[selectedTaskForAdd,setSelectedTaskForAdd]=useState(null);// Helper function to handle task selection\nconst handleTaskSelect=taskId=>{setSelectedNode(taskId);if(onTaskSelect){// Find the task data for the selected task ID\nconst findTask=node=>{if(node.task_id===taskId)return node;if(node.children){for(const child of node.children){const found=findTask(child);if(found)return found;}}return null;};const selectedTask=taskId?findTask(taskTree):null;onTaskSelect(selectedTask);}};// Update expanded nodes when taskTree changes\nuseEffect(()=>{if(taskTree&&expandedNodes.size===0){const allNodeIds=new Set();const collectNodeIds=node=>{allNodeIds.add(node.task_id);if(node.children){node.children.forEach(collectNodeIds);}};collectNodeIds(taskTree);setExpandedNodes(allNodeIds);}},[taskTree,expandedNodes.size]);// Toggle node expansion\nconst toggleNode=nodeId=>{const newExpanded=new Set(expandedNodes);if(newExpanded.has(nodeId)){newExpanded.delete(nodeId);}else{newExpanded.add(nodeId);}setExpandedNodes(newExpanded);};// Expand all nodes\nconst expandAll=()=>{const allNodeIds=new Set();const collectNodeIds=node=>{allNodeIds.add(node.task_id);if(node.children){node.children.forEach(collectNodeIds);}};if(taskTree){collectNodeIds(taskTree);}setExpandedNodes(allNodeIds);};// Collapse all nodes\nconst collapseAll=()=>{setExpandedNodes(new Set());};// Handle opening add task modal\nconst handleAddTask=targetTask=>{setSelectedTaskForAdd(targetTask);setShowAddTaskModal(true);};// Handle submitting new task\nconst handleSubmitAddTask=async taskData=>{try{const response=await fetch(`/api/tasks/${taskData.target_task_id}/add-task`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('access_token')||'dev-bypass-token'}`},body:JSON.stringify({description:taskData.description,target_task_id:taskData.target_task_id,position:taskData.position,auto_decompose:taskData.auto_decompose})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||'Failed to add task');}const result=await response.json();console.log('Task added successfully:',result);// Refresh the tree to show the new task\nif(onRefreshTree){await onRefreshTree();}return result;}catch(error){console.error('Error adding task:',error);throw error;}};// Calculate tree statistics\nconst treeStats=useMemo(()=>{if(!taskTree)return{total:0,completed:0,pending:0,inProgress:0,rejected:0};const calculateStats=function(node){let stats=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{total:0,completed:0,pending:0,inProgress:0,rejected:0};stats.total++;switch(node.status){case'completed':stats.completed++;break;case'in_progress':case'processing':stats.inProgress++;break;case'rejected':stats.rejected++;break;default:stats.pending++;}if(node.children){node.children.forEach(child=>calculateStats(child,stats));}return stats;};return calculateStats(taskTree);},[taskTree]);if(!taskTree){return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center',padding:tokens.spacing[12],textAlign:'center'},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(DocumentIcon,{size:48,style:{color:tokens.colors.dark.border,marginBottom:tokens.spacing[4]}}),/*#__PURE__*/_jsx(Text,{style:{color:tokens.colors.dark.muted,fontSize:tokens.typography.fontSize.lg[0]},children:\"No task tree available\"})]})})});}return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:tokens.spacing[4]},children:[/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',flexWrap:'wrap',gap:tokens.spacing[4]},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:tokens.spacing[4]},children:[/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.lg[0],fontWeight:tokens.typography.fontWeight.semibold,color:tokens.colors.dark.text,margin:0},children:\"Task Tree\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:tokens.spacing[2]},children:[/*#__PURE__*/_jsxs(Badge,{variant:\"secondary\",size:\"sm\",children:[treeStats.total,\" tasks\"]}),treeStats.completed>0&&/*#__PURE__*/_jsxs(Badge,{variant:\"success\",size:\"sm\",children:[treeStats.completed,\" completed\"]}),treeStats.inProgress>0&&/*#__PURE__*/_jsxs(Badge,{variant:\"info\",size:\"sm\",children:[treeStats.inProgress,\" in progress\"]}),treeStats.pending>0&&/*#__PURE__*/_jsxs(Badge,{variant:\"warning\",size:\"sm\",children:[treeStats.pending,\" pending\"]}),treeStats.rejected>0&&/*#__PURE__*/_jsxs(Badge,{variant:\"error\",size:\"sm\",children:[treeStats.rejected,\" rejected\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:tokens.spacing[2]},children:[/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"sm\",onClick:expandAll,children:\"Expand All\"}),/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"sm\",onClick:collapseAll,children:\"Collapse All\"})]})]})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(\"div\",{style:{padding:tokens.spacing[2],overflow:'hidden',width:'100%'},children:/*#__PURE__*/_jsx(TreeNode,{node:taskTree,level:0,expanded:expandedNodes.has(taskTree.task_id),onToggle:()=>toggleNode(taskTree.task_id),selectedNode:selectedNode,onSelect:handleTaskSelect,expandedNodes:expandedNodes,toggleNode:toggleNode,onAddTask:handleAddTask})})}),/*#__PURE__*/_jsx(AddTaskModal,{isOpen:showAddTaskModal,onClose:()=>{setShowAddTaskModal(false);setSelectedTaskForAdd(null);},targetTask:selectedTaskForAdd,onAddTask:handleSubmitAddTask})]});};// Individual Tree Node Component\nconst TreeNode=_ref2=>{var _node$context,_node$context2;let{node,level,expanded,onToggle,selectedNode,onSelect,expandedNodes,toggleNode,onAddTask}=_ref2;const hasChildren=node.children&&node.children.length>0;const isSelected=selectedNode===node.task_id;// Status is managed automatically by the system - no manual updates needed\nconst getStatusIcon=status=>{switch(status){case'completed':return CheckIcon;case'in_progress':case'processing':return PlayIcon;case'rejected':return XCircleIcon;default:return ClockIcon;}};const getStatusColor=status=>{switch(status){case'completed':return tokens.colors.success[500];case'in_progress':case'processing':return tokens.colors.info[500];case'error':case'failed':case'rejected':return tokens.colors.error[500];default:return tokens.colors.warning[500];}};const getStatusVariant=status=>{switch(status){case'completed':return'success';case'in_progress':case'processing':return'info';case'error':case'failed':case'rejected':return'error';default:return'warning';}};const StatusIcon=getStatusIcon(node.status);return/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:level>0?`${level*24}px`:0,width:level>0?`calc(100% - ${level*24}px)`:'100%',overflow:'hidden'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'flex-start',padding:`${tokens.spacing[3]} ${tokens.spacing[3]}`,borderRadius:tokens.borderRadius.md,backgroundColor:isSelected?`${tokens.colors.primary[500]}15`:'transparent',border:isSelected?`1px solid ${tokens.colors.primary[500]}30`:'1px solid transparent',marginBottom:tokens.spacing[1],cursor:'pointer',transition:tokens.transitions.colors,minHeight:'auto',width:'100%','&:hover':{backgroundColor:`${tokens.colors.dark.surface}80`}},onClick:()=>onSelect(isSelected?null:node.task_id),children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'20px',display:'flex',alignItems:'flex-start',justifyContent:'center',paddingTop:tokens.spacing[1],flexShrink:0},children:hasChildren?/*#__PURE__*/_jsx(IconButton,{icon:expanded?ChevronDownIcon:ChevronRightIcon,size:\"sm\",variant:\"ghost\",onClick:e=>{e.stopPropagation();onToggle();},title:expanded?\"Collapse subtasks\":\"Expand subtasks\"}):/*#__PURE__*/_jsx(\"div\",{style:{width:'8px',height:'8px',borderRadius:tokens.borderRadius.full,backgroundColor:getStatusColor(node.status)}})}),/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:tokens.spacing[2],marginRight:tokens.spacing[3],display:'flex',alignItems:'flex-start',paddingTop:tokens.spacing[1],flexShrink:0},children:/*#__PURE__*/_jsx(StatusIcon,{size:16,style:{color:getStatusColor(node.status)}})}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,minWidth:0,display:'flex',flexDirection:'column',gap:tokens.spacing[1]},children:[/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.sm[0],fontWeight:tokens.typography.fontWeight.medium,color:tokens.colors.dark.text,margin:0,wordWrap:'break-word',overflowWrap:'break-word',hyphens:'auto',lineHeight:tokens.typography.lineHeight.normal},children:node.description}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:tokens.spacing[2],marginTop:tokens.spacing[1]},children:[/*#__PURE__*/_jsx(Badge,{variant:getStatusVariant(node.status),size:\"sm\",children:node.status.replace('_',' ')}),hasChildren&&/*#__PURE__*/_jsxs(Badge,{variant:\"secondary\",size:\"sm\",children:[node.children.length,\" subtask\",node.children.length!==1?'s':'']})]})]})]}),isSelected&&/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:tokens.spacing[6],marginBottom:tokens.spacing[3],padding:tokens.spacing[4],backgroundColor:tokens.colors.dark.surface,borderRadius:tokens.borderRadius.md,border:`1px solid ${tokens.colors.dark.border}`},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(200px, 1fr))',gap:tokens.spacing[4]},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.xs[0],color:tokens.colors.dark.muted,textTransform:'uppercase',letterSpacing:tokens.typography.letterSpacing.wide,margin:0,marginBottom:tokens.spacing[1]},children:\"Task ID\"}),/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.sm[0],fontFamily:tokens.typography.fontFamily.mono.join(', '),color:tokens.colors.dark.text,margin:0},children:node.task_id})]}),node.created_at&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.xs[0],color:tokens.colors.dark.muted,textTransform:'uppercase',letterSpacing:tokens.typography.letterSpacing.wide,margin:0,marginBottom:tokens.spacing[1]},children:\"Created\"}),/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.sm[0],color:tokens.colors.dark.text,margin:0},children:new Date(node.created_at).toLocaleDateString()})]}),node.complexity!==undefined&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.xs[0],color:tokens.colors.dark.muted,textTransform:'uppercase',letterSpacing:tokens.typography.letterSpacing.wide,margin:0,marginBottom:tokens.spacing[1]},children:\"Complexity\"}),/*#__PURE__*/_jsxs(Text,{style:{fontSize:tokens.typography.fontSize.sm[0],color:tokens.colors.dark.text,margin:0},children:[node.complexity,\"/10\"]})]})]}),((_node$context=node.context)===null||_node$context===void 0?void 0:_node$context.tech_stack)&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:tokens.spacing[4]},children:[/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.xs[0],color:tokens.colors.dark.muted,textTransform:'uppercase',letterSpacing:tokens.typography.letterSpacing.wide,margin:0,marginBottom:tokens.spacing[2]},children:\"Tech Stack\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexWrap:'wrap',gap:tokens.spacing[2],marginBottom:tokens.spacing[3]},children:[node.context.tech_stack.frontend&&/*#__PURE__*/_jsxs(Badge,{variant:\"info\",size:\"sm\",children:[\"Frontend: \",typeof node.context.tech_stack.frontend==='object'?node.context.tech_stack.frontend.framework||JSON.stringify(node.context.tech_stack.frontend):node.context.tech_stack.frontend]}),node.context.tech_stack.backend&&/*#__PURE__*/_jsxs(Badge,{variant:\"info\",size:\"sm\",children:[\"Backend: \",typeof node.context.tech_stack.backend==='object'?node.context.tech_stack.backend.framework||node.context.tech_stack.backend.language||JSON.stringify(node.context.tech_stack.backend):node.context.tech_stack.backend]}),node.context.tech_stack.database&&/*#__PURE__*/_jsxs(Badge,{variant:\"info\",size:\"sm\",children:[\"Database: \",typeof node.context.tech_stack.database==='object'?JSON.stringify(node.context.tech_stack.database):node.context.tech_stack.database]}),node.context.tech_stack.deployment&&/*#__PURE__*/_jsxs(Badge,{variant:\"info\",size:\"sm\",children:[\"Deploy: \",typeof node.context.tech_stack.deployment==='object'?JSON.stringify(node.context.tech_stack.deployment):node.context.tech_stack.deployment]})]}),node.context.tech_stack.description&&/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.sm[0],color:tokens.colors.dark.muted,lineHeight:tokens.typography.lineHeight.relaxed,margin:0},children:node.context.tech_stack.description})]}),((_node$context2=node.context)===null||_node$context2===void 0?void 0:_node$context2.best_practices)&&node.context.best_practices.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:tokens.spacing[4]},children:[/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.xs[0],color:tokens.colors.dark.muted,textTransform:'uppercase',letterSpacing:tokens.typography.letterSpacing.wide,margin:0,marginBottom:tokens.spacing[2]},children:\"Best Practices\"}),/*#__PURE__*/_jsx(\"ul\",{style:{margin:0,paddingLeft:tokens.spacing[4],fontSize:tokens.typography.fontSize.sm[0],color:tokens.colors.dark.muted,lineHeight:tokens.typography.lineHeight.relaxed},children:node.context.best_practices.map((practice,index)=>/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:tokens.spacing[1]},children:practice},index))})]}),node.additional_context&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:tokens.spacing[4]},children:[/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.xs[0],color:tokens.colors.dark.muted,textTransform:'uppercase',letterSpacing:tokens.typography.letterSpacing.wide,margin:0,marginBottom:tokens.spacing[2]},children:\"Additional Context\"}),/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.sm[0],color:tokens.colors.dark.muted,lineHeight:tokens.typography.lineHeight.relaxed,margin:0},children:node.additional_context})]}),onAddTask&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:tokens.spacing[4],paddingTop:tokens.spacing[4],borderTop:`1px solid ${tokens.colors.dark.border}`},children:[/*#__PURE__*/_jsx(Text,{style:{fontSize:tokens.typography.fontSize.xs[0],color:tokens.colors.dark.muted,textTransform:'uppercase',letterSpacing:tokens.typography.letterSpacing.wide,margin:0,marginBottom:tokens.spacing[3]},children:\"Actions\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexWrap:'wrap',gap:tokens.spacing[2]},children:/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"sm\",icon:PlusIcon,onClick:e=>{e.stopPropagation();onAddTask(node);},children:\"Add Task\"})})]})]}),hasChildren&&expanded&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:tokens.spacing[1]},children:node.children.map(child=>/*#__PURE__*/_jsx(TreeNode,{node:child,level:level+1,expanded:(expandedNodes===null||expandedNodes===void 0?void 0:expandedNodes.has(child.task_id))||false,onToggle:()=>toggleNode?toggleNode(child.task_id):()=>{},selectedNode:selectedNode,onSelect:onSelect,expandedNodes:expandedNodes,toggleNode:toggleNode,onAddTask:onAddTask},child.task_id))})]});};export default TreeVisualization;","map":{"version":3,"names":["React","useState","useMemo","useEffect","Card","Button","IconButton","Text","Badge","ChevronDownIcon","ChevronRightIcon","CheckIcon","PlayIcon","ClockIcon","DocumentIcon","PlusIcon","XCircleIcon","tokens","AddTaskModal","jsx","_jsx","jsxs","_jsxs","TreeVisualization","_ref","taskTree","onTaskSelect","onRefreshTree","expandedNodes","setExpandedNodes","Set","allNodeIds","collectNodeIds","node","add","task_id","children","forEach","selectedNode","setSelectedNode","showAddTaskModal","setShowAddTaskModal","selectedTaskForAdd","setSelectedTaskForAdd","handleTaskSelect","taskId","findTask","child","found","selectedTask","size","toggleNode","nodeId","newExpanded","has","delete","expandAll","collapseAll","handleAddTask","targetTask","handleSubmitAddTask","taskData","response","fetch","target_task_id","method","headers","localStorage","getItem","body","JSON","stringify","description","position","auto_decompose","ok","errorData","json","Error","detail","result","console","log","error","treeStats","total","completed","pending","inProgress","rejected","calculateStats","stats","arguments","length","undefined","status","style","display","alignItems","justifyContent","padding","spacing","textAlign","color","colors","dark","border","marginBottom","muted","fontSize","typography","lg","flexDirection","gap","flexWrap","fontWeight","semibold","text","margin","variant","onClick","overflow","width","TreeNode","level","expanded","onToggle","onSelect","onAddTask","isOpen","onClose","_ref2","_node$context","_node$context2","hasChildren","isSelected","getStatusIcon","getStatusColor","success","info","warning","getStatusVariant","StatusIcon","marginLeft","borderRadius","md","backgroundColor","primary","cursor","transition","transitions","minHeight","surface","paddingTop","flexShrink","icon","e","stopPropagation","title","height","full","marginRight","flex","minWidth","sm","medium","wordWrap","overflowWrap","hyphens","lineHeight","normal","marginTop","replace","gridTemplateColumns","xs","textTransform","letterSpacing","wide","fontFamily","mono","join","created_at","Date","toLocaleDateString","complexity","context","tech_stack","frontend","framework","backend","language","database","deployment","relaxed","best_practices","paddingLeft","map","practice","index","additional_context","borderTop"],"sources":["/app/src/components/TreeVisualization.js"],"sourcesContent":["// Professional Tree Visualization - Interactive task tree using design system\nimport React, { useState, useMemo, useEffect } from 'react';\nimport {\n  Card,\n  Button,\n  IconButton,\n  Text,\n  Badge,\n  ChevronDownIcon,\n  ChevronRightIcon,\n  CheckIcon,\n  PlayIcon,\n  ClockIcon,\n  DocumentIcon,\n  PlusIcon,\n  XCircleIcon,\n  tokens,\n} from '../design-system';\nimport AddTaskModal from './AddTaskModal';\n\nconst TreeVisualization = ({ taskTree, onTaskSelect, onRefreshTree }) => {\n  // Initialize expanded nodes to include all nodes by default\n  const [expandedNodes, setExpandedNodes] = useState(() => {\n    if (!taskTree) return new Set();\n    \n    const allNodeIds = new Set();\n    const collectNodeIds = (node) => {\n      allNodeIds.add(node.task_id);\n      if (node.children) {\n        node.children.forEach(collectNodeIds);\n      }\n    };\n    collectNodeIds(taskTree);\n    return allNodeIds;\n  });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const [selectedTaskForAdd, setSelectedTaskForAdd] = useState(null);\n\n  // Helper function to handle task selection\n  const handleTaskSelect = (taskId) => {\n    setSelectedNode(taskId);\n    if (onTaskSelect) {\n      // Find the task data for the selected task ID\n      const findTask = (node) => {\n        if (node.task_id === taskId) return node;\n        if (node.children) {\n          for (const child of node.children) {\n            const found = findTask(child);\n            if (found) return found;\n          }\n        }\n        return null;\n      };\n      const selectedTask = taskId ? findTask(taskTree) : null;\n      onTaskSelect(selectedTask);\n    }\n  };\n\n  // Update expanded nodes when taskTree changes\n  useEffect(() => {\n    if (taskTree && expandedNodes.size === 0) {\n      const allNodeIds = new Set();\n      const collectNodeIds = (node) => {\n        allNodeIds.add(node.task_id);\n        if (node.children) {\n          node.children.forEach(collectNodeIds);\n        }\n      };\n      collectNodeIds(taskTree);\n      setExpandedNodes(allNodeIds);\n    }\n  }, [taskTree, expandedNodes.size]);\n\n  // Toggle node expansion\n  const toggleNode = (nodeId) => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  // Expand all nodes\n  const expandAll = () => {\n    const allNodeIds = new Set();\n    const collectNodeIds = (node) => {\n      allNodeIds.add(node.task_id);\n      if (node.children) {\n        node.children.forEach(collectNodeIds);\n      }\n    };\n    if (taskTree) {\n      collectNodeIds(taskTree);\n    }\n    setExpandedNodes(allNodeIds);\n  };\n\n  // Collapse all nodes\n  const collapseAll = () => {\n    setExpandedNodes(new Set());\n  };\n\n  // Handle opening add task modal\n  const handleAddTask = (targetTask) => {\n    setSelectedTaskForAdd(targetTask);\n    setShowAddTaskModal(true);\n  };\n\n  // Handle submitting new task\n  const handleSubmitAddTask = async (taskData) => {\n    try {\n      const response = await fetch(`/api/tasks/${taskData.target_task_id}/add-task`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('access_token') || 'dev-bypass-token'}`,\n        },\n        body: JSON.stringify({\n          description: taskData.description,\n          target_task_id: taskData.target_task_id,\n          position: taskData.position,\n          auto_decompose: taskData.auto_decompose,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to add task');\n      }\n\n      const result = await response.json();\n      console.log('Task added successfully:', result);\n\n      // Refresh the tree to show the new task\n      if (onRefreshTree) {\n        await onRefreshTree();\n      }\n      \n      return result;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      throw error;\n    }\n  };\n\n  // Calculate tree statistics\n  const treeStats = useMemo(() => {\n    if (!taskTree) return { total: 0, completed: 0, pending: 0, inProgress: 0, rejected: 0 };\n\n    const calculateStats = (node, stats = { total: 0, completed: 0, pending: 0, inProgress: 0, rejected: 0 }) => {\n      stats.total++;\n      switch (node.status) {\n        case 'completed':\n          stats.completed++;\n          break;\n        case 'in_progress':\n        case 'processing':\n          stats.inProgress++;\n          break;\n        case 'rejected':\n          stats.rejected++;\n          break;\n        default:\n          stats.pending++;\n      }\n\n      if (node.children) {\n        node.children.forEach(child => calculateStats(child, stats));\n      }\n\n      return stats;\n    };\n\n    return calculateStats(taskTree);\n  }, [taskTree]);\n\n  if (!taskTree) {\n    return (\n      <Card>\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: tokens.spacing[12],\n          textAlign: 'center',\n        }}>\n          <div>\n            <DocumentIcon \n              size={48} \n              style={{ \n                color: tokens.colors.dark.border,\n                marginBottom: tokens.spacing[4],\n              }} \n            />\n            <Text style={{\n              color: tokens.colors.dark.muted,\n              fontSize: tokens.typography.fontSize.lg[0],\n            }}>\n              No task tree available\n            </Text>\n          </div>\n        </div>\n      </Card>\n    );\n  }\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: tokens.spacing[4],\n    }}>\n      {/* Tree Controls */}\n      <Card>\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          flexWrap: 'wrap',\n          gap: tokens.spacing[4],\n        }}>\n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: tokens.spacing[4],\n          }}>\n            <Text style={{\n              fontSize: tokens.typography.fontSize.lg[0],\n              fontWeight: tokens.typography.fontWeight.semibold,\n              color: tokens.colors.dark.text,\n              margin: 0,\n            }}>\n              Task Tree\n            </Text>\n            \n            <div style={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: tokens.spacing[2],\n            }}>\n              <Badge variant=\"secondary\" size=\"sm\">\n                {treeStats.total} tasks\n              </Badge>\n              \n              {treeStats.completed > 0 && (\n                <Badge variant=\"success\" size=\"sm\">\n                  {treeStats.completed} completed\n                </Badge>\n              )}\n              \n              {treeStats.inProgress > 0 && (\n                <Badge variant=\"info\" size=\"sm\">\n                  {treeStats.inProgress} in progress\n                </Badge>\n              )}\n              \n              {treeStats.pending > 0 && (\n                <Badge variant=\"warning\" size=\"sm\">\n                  {treeStats.pending} pending\n                </Badge>\n              )}\n              \n              {treeStats.rejected > 0 && (\n                <Badge variant=\"error\" size=\"sm\">\n                  {treeStats.rejected} rejected\n                </Badge>\n              )}\n            </div>\n          </div>\n\n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: tokens.spacing[2],\n          }}>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={expandAll}\n            >\n              Expand All\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={collapseAll}\n            >\n              Collapse All\n            </Button>\n          </div>\n        </div>\n      </Card>\n\n      {/* Tree View */}\n      <Card>\n        <div style={{ \n          padding: tokens.spacing[2],\n          overflow: 'hidden',\n          width: '100%',\n        }}>\n          <TreeNode\n            node={taskTree}\n            level={0}\n            expanded={expandedNodes.has(taskTree.task_id)}\n            onToggle={() => toggleNode(taskTree.task_id)}\n            selectedNode={selectedNode}\n            onSelect={handleTaskSelect}\n            expandedNodes={expandedNodes}\n            toggleNode={toggleNode}\n            onAddTask={handleAddTask}\n          />\n        </div>\n      </Card>\n\n      {/* Add Task Modal */}\n      <AddTaskModal\n        isOpen={showAddTaskModal}\n        onClose={() => {\n          setShowAddTaskModal(false);\n          setSelectedTaskForAdd(null);\n        }}\n        targetTask={selectedTaskForAdd}\n        onAddTask={handleSubmitAddTask}\n      />\n    </div>\n  );\n};\n\n// Individual Tree Node Component\nconst TreeNode = ({ \n  node, \n  level, \n  expanded, \n  onToggle, \n  selectedNode,\n  onSelect,\n  expandedNodes,\n  toggleNode,\n  onAddTask\n}) => {\n  const hasChildren = node.children && node.children.length > 0;\n  const isSelected = selectedNode === node.task_id;\n  \n  // Status is managed automatically by the system - no manual updates needed\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'completed':\n        return CheckIcon;\n      case 'in_progress':\n      case 'processing':\n        return PlayIcon;\n      case 'rejected':\n        return XCircleIcon;\n      default:\n        return ClockIcon;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'completed':\n        return tokens.colors.success[500];\n      case 'in_progress':\n      case 'processing':\n        return tokens.colors.info[500];\n      case 'error':\n      case 'failed':\n      case 'rejected':\n        return tokens.colors.error[500];\n      default:\n        return tokens.colors.warning[500];\n    }\n  };\n\n  const getStatusVariant = (status) => {\n    switch (status) {\n      case 'completed':\n        return 'success';\n      case 'in_progress':\n      case 'processing':\n        return 'info';\n      case 'error':\n      case 'failed':\n      case 'rejected':\n        return 'error';\n      default:\n        return 'warning';\n    }\n  };\n\n  const StatusIcon = getStatusIcon(node.status);\n\n  return (\n    <div style={{ \n      marginLeft: level > 0 ? `${level * 24}px` : 0,\n      width: level > 0 ? `calc(100% - ${level * 24}px)` : '100%',\n      overflow: 'hidden',\n    }}>\n      {/* Node Content */}\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'flex-start',\n          padding: `${tokens.spacing[3]} ${tokens.spacing[3]}`,\n          borderRadius: tokens.borderRadius.md,\n          backgroundColor: isSelected ? `${tokens.colors.primary[500]}15` : 'transparent',\n          border: isSelected ? `1px solid ${tokens.colors.primary[500]}30` : '1px solid transparent',\n          marginBottom: tokens.spacing[1],\n          cursor: 'pointer',\n          transition: tokens.transitions.colors,\n          minHeight: 'auto',\n          width: '100%',\n          '&:hover': {\n            backgroundColor: `${tokens.colors.dark.surface}80`,\n          },\n        }}\n        onClick={() => onSelect(isSelected ? null : node.task_id)}\n      >\n        {/* Expand/Collapse Button */}\n        <div style={{ \n          width: '20px', \n          display: 'flex', \n          alignItems: 'flex-start', \n          justifyContent: 'center',\n          paddingTop: tokens.spacing[1],\n          flexShrink: 0,\n        }}>\n          {hasChildren ? (\n            <IconButton\n              icon={expanded ? ChevronDownIcon : ChevronRightIcon}\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onToggle();\n              }}\n              title={expanded ? \"Collapse subtasks\" : \"Expand subtasks\"}\n            />\n          ) : (\n            <div style={{\n              width: '8px',\n              height: '8px',\n              borderRadius: tokens.borderRadius.full,\n              backgroundColor: getStatusColor(node.status),\n            }} />\n          )}\n        </div>\n\n        {/* Status Icon */}\n        <div style={{ \n          marginLeft: tokens.spacing[2], \n          marginRight: tokens.spacing[3],\n          display: 'flex',\n          alignItems: 'flex-start',\n          paddingTop: tokens.spacing[1],\n          flexShrink: 0,\n        }}>\n          <StatusIcon \n            size={16} \n            style={{ color: getStatusColor(node.status) }} \n          />\n        </div>\n\n        {/* Task Content */}\n        <div style={{ \n          flex: 1, \n          minWidth: 0,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: tokens.spacing[1],\n        }}>\n          <Text style={{\n            fontSize: tokens.typography.fontSize.sm[0],\n            fontWeight: tokens.typography.fontWeight.medium,\n            color: tokens.colors.dark.text,\n            margin: 0,\n            wordWrap: 'break-word',\n            overflowWrap: 'break-word',\n            hyphens: 'auto',\n            lineHeight: tokens.typography.lineHeight.normal,\n          }}>\n            {node.description}\n          </Text>\n\n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: tokens.spacing[2],\n            marginTop: tokens.spacing[1],\n          }}>\n            <Badge variant={getStatusVariant(node.status)} size=\"sm\">\n              {node.status.replace('_', ' ')}\n            </Badge>\n\n            {hasChildren && (\n              <Badge variant=\"secondary\" size=\"sm\">\n                {node.children.length} subtask{node.children.length !== 1 ? 's' : ''}\n              </Badge>\n            )}\n          </div>\n        </div>\n\n        {/* No manual action buttons - status is managed automatically */}\n      </div>\n\n      {/* Task Details (when selected) */}\n      {isSelected && (\n        <div style={{\n          marginLeft: tokens.spacing[6],\n          marginBottom: tokens.spacing[3],\n          padding: tokens.spacing[4],\n          backgroundColor: tokens.colors.dark.surface,\n          borderRadius: tokens.borderRadius.md,\n          border: `1px solid ${tokens.colors.dark.border}`,\n        }}>\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n            gap: tokens.spacing[4],\n          }}>\n            <div>\n              <Text style={{\n                fontSize: tokens.typography.fontSize.xs[0],\n                color: tokens.colors.dark.muted,\n                textTransform: 'uppercase',\n                letterSpacing: tokens.typography.letterSpacing.wide,\n                margin: 0,\n                marginBottom: tokens.spacing[1],\n              }}>\n                Task ID\n              </Text>\n              <Text style={{\n                fontSize: tokens.typography.fontSize.sm[0],\n                fontFamily: tokens.typography.fontFamily.mono.join(', '),\n                color: tokens.colors.dark.text,\n                margin: 0,\n              }}>\n                {node.task_id}\n              </Text>\n            </div>\n\n            {node.created_at && (\n              <div>\n                <Text style={{\n                  fontSize: tokens.typography.fontSize.xs[0],\n                  color: tokens.colors.dark.muted,\n                  textTransform: 'uppercase',\n                  letterSpacing: tokens.typography.letterSpacing.wide,\n                  margin: 0,\n                  marginBottom: tokens.spacing[1],\n                }}>\n                  Created\n                </Text>\n                <Text style={{\n                  fontSize: tokens.typography.fontSize.sm[0],\n                  color: tokens.colors.dark.text,\n                  margin: 0,\n                }}>\n                  {new Date(node.created_at).toLocaleDateString()}\n                </Text>\n              </div>\n            )}\n\n            {node.complexity !== undefined && (\n              <div>\n                <Text style={{\n                  fontSize: tokens.typography.fontSize.xs[0],\n                  color: tokens.colors.dark.muted,\n                  textTransform: 'uppercase',\n                  letterSpacing: tokens.typography.letterSpacing.wide,\n                  margin: 0,\n                  marginBottom: tokens.spacing[1],\n                }}>\n                  Complexity\n                </Text>\n                <Text style={{\n                  fontSize: tokens.typography.fontSize.sm[0],\n                  color: tokens.colors.dark.text,\n                  margin: 0,\n                }}>\n                  {node.complexity}/10\n                </Text>\n              </div>\n            )}\n          </div>\n\n          {/* Tech Stack Information */}\n          {node.context?.tech_stack && (\n            <div style={{ marginTop: tokens.spacing[4] }}>\n              <Text style={{\n                fontSize: tokens.typography.fontSize.xs[0],\n                color: tokens.colors.dark.muted,\n                textTransform: 'uppercase',\n                letterSpacing: tokens.typography.letterSpacing.wide,\n                margin: 0,\n                marginBottom: tokens.spacing[2],\n              }}>\n                Tech Stack\n              </Text>\n              <div style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: tokens.spacing[2],\n                marginBottom: tokens.spacing[3],\n              }}>\n                {node.context.tech_stack.frontend && (\n                  <Badge variant=\"info\" size=\"sm\">\n                    Frontend: {typeof node.context.tech_stack.frontend === 'object' \n                      ? node.context.tech_stack.frontend.framework || JSON.stringify(node.context.tech_stack.frontend)\n                      : node.context.tech_stack.frontend}\n                  </Badge>\n                )}\n                {node.context.tech_stack.backend && (\n                  <Badge variant=\"info\" size=\"sm\">\n                    Backend: {typeof node.context.tech_stack.backend === 'object' \n                      ? node.context.tech_stack.backend.framework || node.context.tech_stack.backend.language || JSON.stringify(node.context.tech_stack.backend)\n                      : node.context.tech_stack.backend}\n                  </Badge>\n                )}\n                {node.context.tech_stack.database && (\n                  <Badge variant=\"info\" size=\"sm\">\n                    Database: {typeof node.context.tech_stack.database === 'object'\n                      ? JSON.stringify(node.context.tech_stack.database)\n                      : node.context.tech_stack.database}\n                  </Badge>\n                )}\n                {node.context.tech_stack.deployment && (\n                  <Badge variant=\"info\" size=\"sm\">\n                    Deploy: {typeof node.context.tech_stack.deployment === 'object'\n                      ? JSON.stringify(node.context.tech_stack.deployment)\n                      : node.context.tech_stack.deployment}\n                  </Badge>\n                )}\n              </div>\n              {node.context.tech_stack.description && (\n                <Text style={{\n                  fontSize: tokens.typography.fontSize.sm[0],\n                  color: tokens.colors.dark.muted,\n                  lineHeight: tokens.typography.lineHeight.relaxed,\n                  margin: 0,\n                }}>\n                  {node.context.tech_stack.description}\n                </Text>\n              )}\n            </div>\n          )}\n\n          {/* Best Practices */}\n          {node.context?.best_practices && node.context.best_practices.length > 0 && (\n            <div style={{ marginTop: tokens.spacing[4] }}>\n              <Text style={{\n                fontSize: tokens.typography.fontSize.xs[0],\n                color: tokens.colors.dark.muted,\n                textTransform: 'uppercase',\n                letterSpacing: tokens.typography.letterSpacing.wide,\n                margin: 0,\n                marginBottom: tokens.spacing[2],\n              }}>\n                Best Practices\n              </Text>\n              <ul style={{\n                margin: 0,\n                paddingLeft: tokens.spacing[4],\n                fontSize: tokens.typography.fontSize.sm[0],\n                color: tokens.colors.dark.muted,\n                lineHeight: tokens.typography.lineHeight.relaxed,\n              }}>\n                {node.context.best_practices.map((practice, index) => (\n                  <li key={index} style={{ marginBottom: tokens.spacing[1] }}>\n                    {practice}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {node.additional_context && (\n            <div style={{ marginTop: tokens.spacing[4] }}>\n              <Text style={{\n                fontSize: tokens.typography.fontSize.xs[0],\n                color: tokens.colors.dark.muted,\n                textTransform: 'uppercase',\n                letterSpacing: tokens.typography.letterSpacing.wide,\n                margin: 0,\n                marginBottom: tokens.spacing[2],\n              }}>\n                Additional Context\n              </Text>\n              <Text style={{\n                fontSize: tokens.typography.fontSize.sm[0],\n                color: tokens.colors.dark.muted,\n                lineHeight: tokens.typography.lineHeight.relaxed,\n                margin: 0,\n              }}>\n                {node.additional_context}\n              </Text>\n            </div>\n          )}\n\n          {/* Task Actions */}\n          {onAddTask && (\n            <div style={{ \n              marginTop: tokens.spacing[4],\n              paddingTop: tokens.spacing[4],\n              borderTop: `1px solid ${tokens.colors.dark.border}`,\n            }}>\n              <Text style={{\n                fontSize: tokens.typography.fontSize.xs[0],\n                color: tokens.colors.dark.muted,\n                textTransform: 'uppercase',\n                letterSpacing: tokens.typography.letterSpacing.wide,\n                margin: 0,\n                marginBottom: tokens.spacing[3],\n              }}>\n                Actions\n              </Text>\n              <div style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: tokens.spacing[2],\n              }}>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  icon={PlusIcon}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onAddTask(node);\n                  }}\n                >\n                  Add Task\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Child Nodes */}\n      {hasChildren && expanded && (\n        <div style={{ marginTop: tokens.spacing[1] }}>\n          {node.children.map((child) => (\n            <TreeNode\n              key={child.task_id}\n              node={child}\n              level={level + 1}\n              expanded={expandedNodes?.has(child.task_id) || false}\n              onToggle={() => toggleNode ? toggleNode(child.task_id) : () => {}}\n              selectedNode={selectedNode}\n              onSelect={onSelect}\n              expandedNodes={expandedNodes}\n              toggleNode={toggleNode}\n              onAddTask={onAddTask}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TreeVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}