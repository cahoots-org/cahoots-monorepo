{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation,useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import apiClient from'../services/unifiedApiClient';import{withErrorHandling}from'../services/errorHandler';import{LoadingTypes}from'../services/loadingService';import{LoadingSpinner,ErrorMessage}from'../design-system';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OAuthCallbackSecure=()=>{const[error,setError]=useState(null);const[loading,setLoading]=useState(true);const{handleOAuthCallback}=useAuth();const location=useLocation();const navigate=useNavigate();useEffect(()=>{const exchangeCodeForTokens=async()=>{try{setError(null);// We're starting a fresh OAuth login flow\nconsole.log('%c === OAUTH CALLBACK SECURE - START === ','background: #222; color: #bada55; font-size: 16px');console.log('Starting OAuth callback secure flow...');// Log browser storage state\nconsole.log('localStorage items:',Object.keys(localStorage).reduce((acc,key)=>{acc[key]=localStorage.getItem(key);return acc;},{}));console.log('sessionStorage items:',Object.keys(sessionStorage).reduce((acc,key)=>{acc[key]=sessionStorage.getItem(key);return acc;},{}));// Log auth headers\nconsole.log('Current apiClient auth header configured');// Calculate time since OAuth redirect started (if available)\nconst redirectTime=localStorage.getItem('oauth_redirect_time');if(redirectTime){const elapsed=Date.now()-parseInt(redirectTime);console.log(`Time elapsed since OAuth redirect: ${elapsed}ms (${elapsed/1000} seconds)`);}// Parse query parameters to get the auth code\nconst params=new URLSearchParams(location.search);const code=params.get('code');if(!code){throw new Error('No authorization code found in URL');}console.log('Exchanging authorization code for tokens:',code);console.log('Using apiClient for token exchange');// Check if we have a valid code\nif(!code||code.trim()===''){console.error('Invalid or empty authorization code');throw new Error('Invalid authorization code');}// Log the API endpoint being used for the token exchange\nconst exchangeUrl=`/api/exchange-auth-code`;console.log('Token exchange endpoint:',exchangeUrl);// Exchange the auth code for tokens with enhanced error handling\nconsole.log('Sending token exchange request with code:',code);const{data:tokenData,error:tokenError}=await withErrorHandling(()=>apiClient.postWithLoading('/exchange-auth-code',null,LoadingTypes.AUTH_OAUTH,{params:{code},withCredentials:true}),{customMessages:{AUTHENTICATION:'OAuth authentication failed. Please try again.',VALIDATION_ERROR:'Your login session has expired. Please try logging in again.',SERVER_ERROR:'Server error during OAuth flow. Please try again later.'}});if(tokenError){if(tokenError.status===400){setError(tokenError.message);setLoading(false);return;}throw new Error(tokenError.message);}const response={data:tokenData};console.log('Token exchange response received:',response.data?'success':'no data');if(!tokenData||!tokenData.access_token){throw new Error('No access token returned from server');}console.log('Successfully exchanged auth code for tokens:',tokenData);// Store the tokens\nconsole.log('Storing access token in localStorage:',tokenData.access_token.substring(0,10)+'...');localStorage.setItem('token',tokenData.access_token);// Verify the token was stored correctly\nconst storedToken=localStorage.getItem('token');console.log('Verifying token storage - token exists:',!!storedToken);console.log('Stored token (first 10 chars):',storedToken?storedToken.substring(0,10)+'...':'null');if(tokenData.refresh_token){console.log('Storing refresh token in localStorage');localStorage.setItem('refresh_token',tokenData.refresh_token);}// Token header is automatically handled by apiClient\nconsole.log('Token will be automatically handled by apiClient interceptor');// Fetch user data\nconsole.log('Fetching user data...');const{data:userData,error:userError}=await withErrorHandling(()=>apiClient.get('/auth/me'),{customMessages:{AUTHENTICATION:'Failed to fetch user data. Please try logging in again.',SERVER_ERROR:'Server error while fetching user data. Please try again.'}});if(userError){throw new Error(userError.message);}console.log('User data fetched:',userData);// IMPORTANT: Update auth context with user data\nconsole.log('Authentication successful, updating auth context');// Ensure tokens are stored in localStorage\nconsole.log('Ensuring tokens are stored in localStorage...');localStorage.setItem('token',tokenData.access_token);if(tokenData.refresh_token){localStorage.setItem('refresh_token',tokenData.refresh_token);}// Token header is automatically handled by apiClient\nconsole.log('Token automatically configured for future requests');// Update auth context with user data\nconsole.log('Updating auth context with user data...');await handleOAuthCallback(userData);// Double-check that token is in localStorage\nconst token=localStorage.getItem('token');if(!token){console.error('Token not found in localStorage after handleOAuthCallback');// Set token again to be sure\nlocalStorage.setItem('token',tokenData.access_token);console.log('Token manually set in localStorage');}// Set a flag in sessionStorage to indicate successful login\nsessionStorage.setItem('oauth_login_success','true');// Navigate to dashboard using React Router\nconsole.log('Navigating to dashboard...');navigate('/dashboard');}catch(err){console.error('Error in authentication flow:',err);console.error('Error details:',err.response?err.response.data:err.message);console.error('Error status:',err.response?err.response.status:'No status');console.error('Error headers:',err.response?err.response.headers:'No headers');// Handle expired or invalid authorization code\nif(err.response&&err.response.status===400){setError('Authorization code expired or invalid. Please try logging in again.');}else{setError(err.message||'Authentication failed');}}finally{setLoading(false);}};exchangeCodeForTokens();},[location,navigate,handleOAuthCallback]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-brand-dark-bg flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(LoadingSpinner,{size:\"large\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-brand-text mt-4\",children:\"Completing authentication...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-brand-dark-bg flex items-center justify-center px-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-md\",children:[/*#__PURE__*/_jsx(ErrorMessage,{message:error,className:\"mb-6\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-brand-muted-text mb-4\",children:\"Authentication failed. Please try again or use another authentication method.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/login'),className:\"btn btn-primary px-6 py-2 rounded-lg font-medium\",children:\"Return to Login\"})]})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-brand-dark-bg flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(LoadingSpinner,{size:\"large\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-brand-text mt-4\",children:\"Authentication successful! Redirecting to dashboard...\"})]})});};export default OAuthCallbackSecure;","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","useAuth","apiClient","withErrorHandling","LoadingTypes","LoadingSpinner","ErrorMessage","jsx","_jsx","jsxs","_jsxs","OAuthCallbackSecure","error","setError","loading","setLoading","handleOAuthCallback","location","navigate","exchangeCodeForTokens","console","log","Object","keys","localStorage","reduce","acc","key","getItem","sessionStorage","redirectTime","elapsed","Date","now","parseInt","params","URLSearchParams","search","code","get","Error","trim","exchangeUrl","data","tokenData","tokenError","postWithLoading","AUTH_OAUTH","withCredentials","customMessages","AUTHENTICATION","VALIDATION_ERROR","SERVER_ERROR","status","message","response","access_token","substring","setItem","storedToken","refresh_token","userData","userError","token","err","headers","className","children","size","onClick"],"sources":["/app/src/pages/OAuthCallbackSecure.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport apiClient from '../services/unifiedApiClient';\nimport { withErrorHandling } from '../services/errorHandler';\nimport { LoadingTypes } from '../services/loadingService';\nimport { LoadingSpinner, ErrorMessage } from '../design-system';\n\nconst OAuthCallbackSecure = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { handleOAuthCallback } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const exchangeCodeForTokens = async () => {\n      try {\n        setError(null);\n        \n        // We're starting a fresh OAuth login flow\n        console.log('%c === OAUTH CALLBACK SECURE - START === ', 'background: #222; color: #bada55; font-size: 16px');\n        console.log('Starting OAuth callback secure flow...');\n        \n        // Log browser storage state\n        console.log('localStorage items:', Object.keys(localStorage).reduce((acc, key) => {\n          acc[key] = localStorage.getItem(key);\n          return acc;\n        }, {}));\n        \n        console.log('sessionStorage items:', Object.keys(sessionStorage).reduce((acc, key) => {\n          acc[key] = sessionStorage.getItem(key);\n          return acc;\n        }, {}));\n        \n        // Log auth headers\n        console.log('Current apiClient auth header configured');\n        \n        // Calculate time since OAuth redirect started (if available)\n        const redirectTime = localStorage.getItem('oauth_redirect_time');\n        if (redirectTime) {\n          const elapsed = Date.now() - parseInt(redirectTime);\n          console.log(`Time elapsed since OAuth redirect: ${elapsed}ms (${elapsed/1000} seconds)`);\n        }\n        \n        // Parse query parameters to get the auth code\n        const params = new URLSearchParams(location.search);\n        const code = params.get('code');\n        \n        if (!code) {\n          throw new Error('No authorization code found in URL');\n        }\n        \n        console.log('Exchanging authorization code for tokens:', code);\n        console.log('Using apiClient for token exchange');\n        \n        // Check if we have a valid code\n        if (!code || code.trim() === '') {\n          console.error('Invalid or empty authorization code');\n          throw new Error('Invalid authorization code');\n        }\n        \n        // Log the API endpoint being used for the token exchange\n        const exchangeUrl = `/api/exchange-auth-code`;\n        console.log('Token exchange endpoint:', exchangeUrl);\n        \n        // Exchange the auth code for tokens with enhanced error handling\n        console.log('Sending token exchange request with code:', code);\n        \n        const { data: tokenData, error: tokenError } = await withErrorHandling(\n          () => apiClient.postWithLoading('/exchange-auth-code', null, LoadingTypes.AUTH_OAUTH, {\n            params: { code },\n            withCredentials: true\n          }),\n          {\n            customMessages: {\n              AUTHENTICATION: 'OAuth authentication failed. Please try again.',\n              VALIDATION_ERROR: 'Your login session has expired. Please try logging in again.',\n              SERVER_ERROR: 'Server error during OAuth flow. Please try again later.'\n            }\n          }\n        );\n        \n        if (tokenError) {\n          if (tokenError.status === 400) {\n            setError(tokenError.message);\n            setLoading(false);\n            return;\n          }\n          throw new Error(tokenError.message);\n        }\n        \n        const response = { data: tokenData };\n        console.log('Token exchange response received:', response.data ? 'success' : 'no data');\n        \n        if (!tokenData || !tokenData.access_token) {\n          throw new Error('No access token returned from server');\n        }\n        \n        console.log('Successfully exchanged auth code for tokens:', tokenData);\n        \n        // Store the tokens\n        console.log('Storing access token in localStorage:', tokenData.access_token.substring(0, 10) + '...');\n        localStorage.setItem('token', tokenData.access_token);\n        \n        // Verify the token was stored correctly\n        const storedToken = localStorage.getItem('token');\n        console.log('Verifying token storage - token exists:', !!storedToken);\n        console.log('Stored token (first 10 chars):', storedToken ? storedToken.substring(0, 10) + '...' : 'null');\n        \n        if (tokenData.refresh_token) {\n          console.log('Storing refresh token in localStorage');\n          localStorage.setItem('refresh_token', tokenData.refresh_token);\n        }\n        \n        // Token header is automatically handled by apiClient\n        console.log('Token will be automatically handled by apiClient interceptor');\n        \n        // Fetch user data\n        console.log('Fetching user data...');\n        const { data: userData, error: userError } = await withErrorHandling(\n          () => apiClient.get('/auth/me'),\n          {\n            customMessages: {\n              AUTHENTICATION: 'Failed to fetch user data. Please try logging in again.',\n              SERVER_ERROR: 'Server error while fetching user data. Please try again.'\n            }\n          }\n        );\n        \n        if (userError) {\n          throw new Error(userError.message);\n        }\n        \n        console.log('User data fetched:', userData);\n        \n        // IMPORTANT: Update auth context with user data\n        console.log('Authentication successful, updating auth context');\n        \n        // Ensure tokens are stored in localStorage\n        console.log('Ensuring tokens are stored in localStorage...');\n        localStorage.setItem('token', tokenData.access_token);\n        if (tokenData.refresh_token) {\n          localStorage.setItem('refresh_token', tokenData.refresh_token);\n        }\n        \n        // Token header is automatically handled by apiClient\n        console.log('Token automatically configured for future requests');\n        \n        // Update auth context with user data\n        console.log('Updating auth context with user data...');\n        await handleOAuthCallback(userData);\n        \n        // Double-check that token is in localStorage\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('Token not found in localStorage after handleOAuthCallback');\n          // Set token again to be sure\n          localStorage.setItem('token', tokenData.access_token);\n          console.log('Token manually set in localStorage');\n        }\n        \n        // Set a flag in sessionStorage to indicate successful login\n        sessionStorage.setItem('oauth_login_success', 'true');\n        \n        // Navigate to dashboard using React Router\n        console.log('Navigating to dashboard...');\n        navigate('/dashboard');\n      } catch (err) {\n        console.error('Error in authentication flow:', err);\n        console.error('Error details:', err.response ? err.response.data : err.message);\n        console.error('Error status:', err.response ? err.response.status : 'No status');\n        console.error('Error headers:', err.response ? err.response.headers : 'No headers');\n        \n        // Handle expired or invalid authorization code\n        if (err.response && err.response.status === 400) {\n          setError('Authorization code expired or invalid. Please try logging in again.');\n        } else {\n          setError(err.message || 'Authentication failed');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    exchangeCodeForTokens();\n  }, [location, navigate, handleOAuthCallback]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-brand-dark-bg flex items-center justify-center\">\n        <div className=\"flex flex-col items-center\">\n          <LoadingSpinner size=\"large\" />\n          <p className=\"text-brand-text mt-4\">Completing authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-brand-dark-bg flex items-center justify-center px-4\">\n        <div className=\"w-full max-w-md\">\n          <ErrorMessage message={error} className=\"mb-6\" />\n          <div className=\"text-center\">\n            <p className=\"text-brand-muted-text mb-4\">\n              Authentication failed. Please try again or use another authentication method.\n            </p>\n            <button \n              onClick={() => navigate('/login')} \n              className=\"btn btn-primary px-6 py-2 rounded-lg font-medium\"\n            >\n              Return to Login\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-brand-dark-bg flex items-center justify-center\">\n      <div className=\"flex flex-col items-center\">\n        <LoadingSpinner size=\"large\" />\n        <p className=\"text-brand-text mt-4\">Authentication successful! Redirecting to dashboard...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default OAuthCallbackSecure;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}