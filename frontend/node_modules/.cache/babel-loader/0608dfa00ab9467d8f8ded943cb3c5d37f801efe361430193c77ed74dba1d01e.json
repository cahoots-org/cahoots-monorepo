{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuth}from'../contexts/AuthContext';import{useNotification}from'../hooks/useNotification';import{Card,Button,Text,LoadingSpinner,Modal,CheckIcon,ExclamationCircleIcon,tokens}from'../design-system';import{FaGithub}from'react-icons/fa';import apiClient from'../services/unifiedApiClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GitHubIntegration=()=>{const[loading,setLoading]=useState(false);const[accessToken,setAccessToken]=useState('');const[isConnected,setIsConnected]=useState(false);const[showModal,setShowModal]=useState(false);const[userData,setUserData]=useState(null);const{isAuthenticated}=useAuth();const{showNotification}=useNotification();// Check if user has a GitHub token stored\nconst checkConnection=async()=>{if(!isAuthenticated)return;setLoading(true);try{const data=await apiClient.get('/github/status');if(data){setIsConnected(data.connected||false);setUserData(data.user||null);}else{setIsConnected(false);setUserData(null);}}catch(error){console.error('Failed to check GitHub connection:',error);setIsConnected(false);setUserData(null);}finally{setLoading(false);}};useEffect(()=>{checkConnection();},[isAuthenticated]);// eslint-disable-line react-hooks/exhaustive-deps\n// Connect GitHub account\nconst connectGitHub=async()=>{if(!accessToken){showNotification({type:'error',message:'Please enter your GitHub access token'});return;}setLoading(true);try{const data=await apiClient.post('/github/connect',{access_token:accessToken});showNotification({type:'success',message:`Connected to GitHub as ${data.username||'your account'}`});setIsConnected(true);setUserData(data.user||null);setAccessToken('');// Clear the token from form\nsetShowModal(false);// Also refresh connection status\nawait checkConnection();}catch(error){var _error$response,_error$response$data;console.error('GitHub connect error:',error);showNotification({type:'error',message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||error.userMessage||error.message||'Failed to connect to GitHub'});}finally{setLoading(false);}};// Disconnect GitHub account\nconst disconnectGitHub=async()=>{if(!window.confirm('Are you sure you want to disconnect your GitHub account?')){return;}setLoading(true);try{await apiClient.delete('/github/disconnect');showNotification({type:'success',message:'GitHub account disconnected'});setIsConnected(false);setUserData(null);}catch(error){var _error$response2,_error$response2$data;showNotification({type:'error',message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.detail)||'Failed to disconnect GitHub account'});}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:tokens.spacing[4]},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{size:\"lg\",weight:\"bold\",style:{marginBottom:tokens.spacing[1]},children:\"GitHub Integration\"}),/*#__PURE__*/_jsx(Text,{size:\"sm\",style:{color:tokens.colors.dark.muted},children:\"Connect your GitHub account to provide repository context during task creation\"})]}),!isConnected?/*#__PURE__*/_jsxs(Button,{type:\"button\",onClick:()=>setShowModal(true),disabled:!isAuthenticated||loading,size:\"sm\",style:{display:'flex',alignItems:'center',gap:tokens.spacing[2]},children:[/*#__PURE__*/_jsx(FaGithub,{}),\"Connect\"]}):/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"secondary\",onClick:disconnectGitHub,disabled:loading,size:\"sm\",children:\"Disconnect\"})]}),!isAuthenticated&&/*#__PURE__*/_jsxs(Card,{style:{backgroundColor:tokens.colors.warning[50],border:`1px solid ${tokens.colors.warning[200]}`,marginBottom:tokens.spacing[4]},children:[/*#__PURE__*/_jsx(Text,{weight:\"semibold\",children:\"Authentication Required\"}),/*#__PURE__*/_jsx(Text,{children:\"Please log in to connect your GitHub account\"})]}),loading&&!isConnected?/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:tokens.spacing[10]},children:[/*#__PURE__*/_jsx(LoadingSpinner,{size:\"lg\"}),/*#__PURE__*/_jsx(Text,{style:{marginTop:tokens.spacing[4]},children:\"Checking connection...\"})]}):isConnected&&userData?/*#__PURE__*/_jsx(Card,{style:{backgroundColor:tokens.colors.success[50],border:`1px solid ${tokens.colors.success[200]}`},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:tokens.spacing[3]},children:[/*#__PURE__*/_jsx(CheckIcon,{size:24,style:{color:tokens.colors.success[500]}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{weight:\"semibold\",children:\"Connected to GitHub\"}),/*#__PURE__*/_jsxs(Text,{size:\"sm\",style:{color:tokens.colors.dark.muted},children:[\"Logged in as \",userData.login||userData.username,userData.public_repos&&` â€¢ ${userData.public_repos} public repositories`]})]})]})}):!isConnected?/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:tokens.spacing[3]},children:[/*#__PURE__*/_jsx(ExclamationCircleIcon,{size:24,style:{color:tokens.colors.warning[500]}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{weight:\"semibold\",children:\"Not Connected\"}),/*#__PURE__*/_jsx(Text,{size:\"sm\",style:{color:tokens.colors.dark.muted},children:\"Connect your GitHub account to enable repository context in task creation\"})]})]})}):null,/*#__PURE__*/_jsxs(Modal,{isOpen:showModal,onClose:()=>setShowModal(false),title:\"Connect GitHub Account\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:tokens.spacing[4]},children:[/*#__PURE__*/_jsx(Text,{weight:\"semibold\",style:{marginBottom:tokens.spacing[2]},children:\"Personal Access Token\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"ghp_...\",value:accessToken,onChange:e=>setAccessToken(e.target.value),style:{width:'100%',padding:tokens.spacing[2],border:`1px solid ${tokens.colors.dark.border}`,borderRadius:tokens.borderRadius.md,backgroundColor:tokens.colors.dark.bg,color:tokens.colors.dark.text}}),/*#__PURE__*/_jsxs(Text,{size:\"sm\",style:{color:tokens.colors.dark.muted,marginTop:tokens.spacing[1]},children:[\"Create a\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/settings/tokens/new?scopes=repo,read:user\",target:\"_blank\",rel:\"noopener noreferrer\",style:{color:tokens.colors.primary[500]},children:\"personal access token\"}),' ',\"with 'repo' and 'read:user' scopes.\"]})]}),/*#__PURE__*/_jsxs(Card,{style:{backgroundColor:tokens.colors.info[50],border:`1px solid ${tokens.colors.info[200]}`,marginBottom:tokens.spacing[4]},children:[/*#__PURE__*/_jsx(Text,{weight:\"semibold\",size:\"sm\",children:\"How it works\"}),/*#__PURE__*/_jsx(Text,{size:\"xs\",style:{marginTop:tokens.spacing[1]},children:\"Once connected, you'll be able to select any of your repositories when creating tasks. The system will analyze your selected repository to provide relevant context and patterns during task decomposition.\"})]}),/*#__PURE__*/_jsxs(Card,{style:{backgroundColor:tokens.colors.warning[50],border:`1px solid ${tokens.colors.warning[200]}`,marginBottom:tokens.spacing[4]},children:[/*#__PURE__*/_jsx(Text,{weight:\"semibold\",size:\"sm\",children:\"Security Note\"}),/*#__PURE__*/_jsx(Text,{size:\"xs\",style:{marginTop:tokens.spacing[1]},children:\"Your token is stored securely and only used to access repositories you explicitly select. We never modify your code or repositories.\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'flex-end',gap:tokens.spacing[3]},children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"secondary\",onClick:()=>setShowModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"button\",onClick:connectGitHub,disabled:loading||!accessToken,style:{display:'flex',alignItems:'center',gap:tokens.spacing[2]},children:[loading?/*#__PURE__*/_jsx(LoadingSpinner,{size:\"sm\"}):/*#__PURE__*/_jsx(FaGithub,{}),\"Connect Account\"]})]})]})]});};export default GitHubIntegration;","map":{"version":3,"names":["React","useState","useEffect","useAuth","useNotification","Card","Button","Text","LoadingSpinner","Modal","CheckIcon","ExclamationCircleIcon","tokens","FaGithub","apiClient","jsx","_jsx","jsxs","_jsxs","GitHubIntegration","loading","setLoading","accessToken","setAccessToken","isConnected","setIsConnected","showModal","setShowModal","userData","setUserData","isAuthenticated","showNotification","checkConnection","data","get","connected","user","error","console","connectGitHub","type","message","post","access_token","username","_error$response","_error$response$data","response","detail","userMessage","disconnectGitHub","window","confirm","delete","_error$response2","_error$response2$data","children","style","display","justifyContent","alignItems","marginBottom","spacing","size","weight","color","colors","dark","muted","onClick","disabled","gap","variant","backgroundColor","warning","border","textAlign","padding","marginTop","success","login","public_repos","isOpen","onClose","title","placeholder","value","onChange","e","target","width","borderRadius","md","bg","text","href","rel","primary","info"],"sources":["/app/src/components/GitHubIntegration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNotification } from '../hooks/useNotification';\nimport {\n  Card,\n  Button,\n  Text,\n  LoadingSpinner,\n  Modal,\n  CheckIcon,\n  ExclamationCircleIcon,\n  tokens,\n} from '../design-system';\nimport { FaGithub } from 'react-icons/fa';\nimport apiClient from '../services/unifiedApiClient';\n\nconst GitHubIntegration = () => {\n  const [loading, setLoading] = useState(false);\n  const [accessToken, setAccessToken] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [userData, setUserData] = useState(null);\n  const { isAuthenticated } = useAuth();\n  const { showNotification } = useNotification();\n\n  // Check if user has a GitHub token stored\n  const checkConnection = async () => {\n    if (!isAuthenticated) return;\n    \n    setLoading(true);\n    try {\n      const data = await apiClient.get('/github/status');\n      if (data) {\n        setIsConnected(data.connected || false);\n        setUserData(data.user || null);\n      } else {\n        setIsConnected(false);\n        setUserData(null);\n      }\n    } catch (error) {\n      console.error('Failed to check GitHub connection:', error);\n      setIsConnected(false);\n      setUserData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    checkConnection();\n  }, [isAuthenticated]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Connect GitHub account\n  const connectGitHub = async () => {\n    if (!accessToken) {\n      showNotification({\n        type: 'error',\n        message: 'Please enter your GitHub access token'\n      });\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const data = await apiClient.post('/github/connect', {\n        access_token: accessToken\n      });\n      \n      showNotification({\n        type: 'success',\n        message: `Connected to GitHub as ${data.username || 'your account'}`\n      });\n\n      setIsConnected(true);\n      setUserData(data.user || null);\n      setAccessToken(''); // Clear the token from form\n      setShowModal(false);\n      \n      // Also refresh connection status\n      await checkConnection();\n      \n    } catch (error) {\n      console.error('GitHub connect error:', error);\n      showNotification({\n        type: 'error',\n        message: error.response?.data?.detail || error.userMessage || error.message || 'Failed to connect to GitHub'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Disconnect GitHub account\n  const disconnectGitHub = async () => {\n    if (!window.confirm('Are you sure you want to disconnect your GitHub account?')) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await apiClient.delete('/github/disconnect');\n\n      showNotification({\n        type: 'success',\n        message: 'GitHub account disconnected'\n      });\n\n      setIsConnected(false);\n      setUserData(null);\n      \n    } catch (error) {\n      showNotification({\n        type: 'error',\n        message: error.response?.data?.detail || 'Failed to disconnect GitHub account'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card>\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center',\n        marginBottom: tokens.spacing[4]\n      }}>\n        <div>\n          <Text size=\"lg\" weight=\"bold\" style={{ marginBottom: tokens.spacing[1] }}>\n            GitHub Integration\n          </Text>\n          <Text size=\"sm\" style={{ color: tokens.colors.dark.muted }}>\n            Connect your GitHub account to provide repository context during task creation\n          </Text>\n        </div>\n        \n        {!isConnected ? (\n          <Button\n            type=\"button\"\n            onClick={() => setShowModal(true)}\n            disabled={!isAuthenticated || loading}\n            size=\"sm\"\n            style={{ display: 'flex', alignItems: 'center', gap: tokens.spacing[2] }}\n          >\n            <FaGithub />\n            Connect\n          </Button>\n        ) : (\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={disconnectGitHub}\n            disabled={loading}\n            size=\"sm\"\n          >\n            Disconnect\n          </Button>\n        )}\n      </div>\n\n      {!isAuthenticated && (\n        <Card style={{ \n          backgroundColor: tokens.colors.warning[50],\n          border: `1px solid ${tokens.colors.warning[200]}`,\n          marginBottom: tokens.spacing[4]\n        }}>\n          <Text weight=\"semibold\">Authentication Required</Text>\n          <Text>Please log in to connect your GitHub account</Text>\n        </Card>\n      )}\n\n      {loading && !isConnected ? (\n        <div style={{ textAlign: 'center', padding: tokens.spacing[10] }}>\n          <LoadingSpinner size=\"lg\" />\n          <Text style={{ marginTop: tokens.spacing[4] }}>Checking connection...</Text>\n        </div>\n      ) : isConnected && userData ? (\n        <Card style={{\n          backgroundColor: tokens.colors.success[50],\n          border: `1px solid ${tokens.colors.success[200]}`\n        }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: tokens.spacing[3] }}>\n            <CheckIcon size={24} style={{ color: tokens.colors.success[500] }} />\n            <div>\n              <Text weight=\"semibold\">Connected to GitHub</Text>\n              <Text size=\"sm\" style={{ color: tokens.colors.dark.muted }}>\n                Logged in as {userData.login || userData.username}\n                {userData.public_repos && ` â€¢ ${userData.public_repos} public repositories`}\n              </Text>\n            </div>\n          </div>\n        </Card>\n      ) : !isConnected ? (\n        <Card>\n          <div style={{ display: 'flex', alignItems: 'center', gap: tokens.spacing[3] }}>\n            <ExclamationCircleIcon size={24} style={{ color: tokens.colors.warning[500] }} />\n            <div>\n              <Text weight=\"semibold\">Not Connected</Text>\n              <Text size=\"sm\" style={{ color: tokens.colors.dark.muted }}>\n                Connect your GitHub account to enable repository context in task creation\n              </Text>\n            </div>\n          </div>\n        </Card>\n      ) : null}\n\n      {/* Connect GitHub Modal */}\n      <Modal \n        isOpen={showModal}\n        onClose={() => setShowModal(false)}\n        title=\"Connect GitHub Account\"\n      >\n        <div style={{ marginBottom: tokens.spacing[4] }}>\n          <Text weight=\"semibold\" style={{ marginBottom: tokens.spacing[2] }}>\n            Personal Access Token\n          </Text>\n          <input\n            type=\"password\"\n            placeholder=\"ghp_...\"\n            value={accessToken}\n            onChange={(e) => setAccessToken(e.target.value)}\n            style={{\n              width: '100%',\n              padding: tokens.spacing[2],\n              border: `1px solid ${tokens.colors.dark.border}`,\n              borderRadius: tokens.borderRadius.md,\n              backgroundColor: tokens.colors.dark.bg,\n              color: tokens.colors.dark.text\n            }}\n          />\n          <Text size=\"sm\" style={{ \n            color: tokens.colors.dark.muted,\n            marginTop: tokens.spacing[1]\n          }}>\n            Create a{' '}\n            <a \n              href=\"https://github.com/settings/tokens/new?scopes=repo,read:user\" \n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ color: tokens.colors.primary[500] }}\n            >\n              personal access token\n            </a>{' '}\n            with 'repo' and 'read:user' scopes.\n          </Text>\n        </div>\n\n        <Card style={{ \n          backgroundColor: tokens.colors.info[50],\n          border: `1px solid ${tokens.colors.info[200]}`,\n          marginBottom: tokens.spacing[4]\n        }}>\n          <Text weight=\"semibold\" size=\"sm\">How it works</Text>\n          <Text size=\"xs\" style={{ marginTop: tokens.spacing[1] }}>\n            Once connected, you'll be able to select any of your repositories when creating tasks.\n            The system will analyze your selected repository to provide relevant context and patterns\n            during task decomposition.\n          </Text>\n        </Card>\n\n        <Card style={{ \n          backgroundColor: tokens.colors.warning[50],\n          border: `1px solid ${tokens.colors.warning[200]}`,\n          marginBottom: tokens.spacing[4]\n        }}>\n          <Text weight=\"semibold\" size=\"sm\">Security Note</Text>\n          <Text size=\"xs\" style={{ marginTop: tokens.spacing[1] }}>\n            Your token is stored securely and only used to access repositories you explicitly select.\n            We never modify your code or repositories.\n          </Text>\n        </Card>\n\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'flex-end',\n          gap: tokens.spacing[3]\n        }}>\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={() => setShowModal(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={connectGitHub}\n            disabled={loading || !accessToken}\n            style={{ display: 'flex', alignItems: 'center', gap: tokens.spacing[2] }}\n          >\n            {loading ? <LoadingSpinner size=\"sm\" /> : <FaGithub />}\n            Connect Account\n          </Button>\n        </div>\n      </Modal>\n    </Card>\n  );\n};\n\nexport default GitHubIntegration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}