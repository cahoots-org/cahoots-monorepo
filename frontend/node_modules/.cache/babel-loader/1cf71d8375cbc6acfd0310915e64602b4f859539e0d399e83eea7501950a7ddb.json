{"ast":null,"code":"import React,{useState}from'react';import{useSettings}from'../contexts/SettingsContext';import apiClient from'../services/unifiedApiClient';import{withErrorHandling}from'../services/errorHandler';import{LoadingTypes}from'../services/loadingService';import JiraExportProgress from'./JiraExportProgress';import TrelloExportProgress from'./TrelloExportProgress';// Constants for export functionality\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const EXPORT_FILENAME_MAX_LENGTH=30;const BOARD_NAME_MAX_LENGTH=30;const ExportModal=_ref=>{var _settings$jiraIntegra6,_settings$jiraIntegra8,_settings$trelloInteg3,_settings$trelloInteg5,_settings$trelloInteg6,_settings$trelloInteg7,_settings$trelloInteg8,_settings$trelloInteg9,_settings$trelloInteg0,_settings$jiraIntegra9,_settings$jiraIntegra0,_settings$jiraIntegra1,_settings$jiraIntegra10,_settings$jiraIntegra11;let{task,localTaskTree,onShowToast}=_ref;const[isTrelloModalOpen,setIsTrelloModalOpen]=useState(false);const[isJiraModalOpen,setIsJiraModalOpen]=useState(false);const[isJiraProgressOpen,setIsJiraProgressOpen]=useState(false);const[isTrelloProgressOpen,setIsTrelloProgressOpen]=useState(false);const[isDropdownOpen,setIsDropdownOpen]=useState(false);const[boardName,setBoardName]=useState('');const[isExporting,setIsExporting]=useState(false);const[currentExportId,setCurrentExportId]=useState(null);const[currentTrelloExportId,setCurrentTrelloExportId]=useState(null);const[exportResult,setExportResult]=useState(null);const[jiraConfig,setJiraConfig]=useState({projectName:'',projectKey:'',jiraUrl:'',apiToken:'',userEmail:'',accountId:'',users:[{username:'',email:''}]});const{settings}=useSettings();const onTrelloModalOpen=()=>{// Pre-fill board name from task description\nif(task!==null&&task!==void 0&&task.description){setBoardName(`Cahoots: ${task.description.split('\\n')[0].substring(0,BOARD_NAME_MAX_LENGTH)}`);}setIsTrelloModalOpen(true);};const onTrelloModalClose=()=>setIsTrelloModalOpen(false);const onJiraModalOpen=()=>{var _settings$jiraIntegra,_settings$jiraIntegra2,_settings$jiraIntegra3,_settings$jiraIntegra4,_settings$jiraIntegra5;// Always show the modal for project configuration, but pre-fill credentials if available\nsetJiraConfig({projectName:task!==null&&task!==void 0&&task.description?`Cahoots: ${task.description.split('\\n')[0].substring(0,30)}`:'Cahoots Project',projectKey:'CAHOOTS',jiraUrl:((_settings$jiraIntegra=settings.jiraIntegration)===null||_settings$jiraIntegra===void 0?void 0:_settings$jiraIntegra.jiraUrl)||'https://your-domain.atlassian.net',apiToken:((_settings$jiraIntegra2=settings.jiraIntegration)===null||_settings$jiraIntegra2===void 0?void 0:_settings$jiraIntegra2.apiToken)||'',userEmail:((_settings$jiraIntegra3=settings.jiraIntegration)===null||_settings$jiraIntegra3===void 0?void 0:_settings$jiraIntegra3.userEmail)||'',accountId:((_settings$jiraIntegra4=settings.jiraIntegration)===null||_settings$jiraIntegra4===void 0?void 0:_settings$jiraIntegra4.accountId)||'',users:[{username:'project-admin',email:((_settings$jiraIntegra5=settings.jiraIntegration)===null||_settings$jiraIntegra5===void 0?void 0:_settings$jiraIntegra5.userEmail)||''}]});setIsJiraModalOpen(true);};const onJiraModalClose=()=>setIsJiraModalOpen(false);// Function to handle exporting to JSON\nconst handleExportToJson=()=>{if(!task)return;// Create a JSON file from the task tree\nconst dataStr=JSON.stringify(localTaskTree,null,2);const dataUri='data:application/json;charset=utf-8,'+encodeURIComponent(dataStr);// Create a download link and trigger the download\nconst exportFileDefaultName=`${task.description.split('\\n')[0].substring(0,EXPORT_FILENAME_MAX_LENGTH)}-task-tree.json`;const linkElement=document.createElement('a');linkElement.setAttribute('href',dataUri);linkElement.setAttribute('download',exportFileDefaultName);linkElement.click();};// Function to handle exporting to JIRA via backend API\nconst handleExportToJira=async()=>{if(!task||!localTaskTree)return;setIsExporting(true);// Close config modal and open progress modal immediately  \nonJiraModalClose();setIsJiraProgressOpen(true);try{// Prepare the request payload\nconst exportRequest={config:{jira_url:jiraConfig.jiraUrl,user_email:jiraConfig.userEmail,api_token:jiraConfig.apiToken,account_id:jiraConfig.accountId,project_name:jiraConfig.projectName,project_key:jiraConfig.projectKey,users:jiraConfig.users},task_tree:localTaskTree};// Make request to start export and get export ID\nconst response=await fetch('/api/jira/start-export',{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('token')||'dev-bypass-token'}`},body:JSON.stringify(exportRequest)});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||`HTTP ${response.status}: ${response.statusText}`);}const result=await response.json();// Update the export ID with the real one from backend\nsetCurrentExportId(result.export_id);}catch(error){console.error('Error exporting to JIRA:',error);handleJiraExportError({message:error.message});}finally{setIsExporting(false);}};// Handle successful JIRA export\nconst handleJiraExportSuccess=result=>{onShowToast(`Successfully created JIRA project with ${result.issues_created} issues`,'success');// Open the project in a new tab\nif(result.project_url){window.open(result.project_url,'_blank');}// Keep the progress modal open - user can close it manually\n// The progress modal will show completion status and allow manual closure\n};// Handle JIRA export error\nconst handleJiraExportError=error=>{onShowToast(`JIRA export failed: ${error.message||'Unknown error'}`,'error');setIsJiraProgressOpen(false);setCurrentExportId(null);};// Handle successful Trello export\nconst handleTrelloExportSuccess=result=>{onShowToast(`Successfully created Trello board with ${result.cards_created} cards`,'success');// Open the board in a new tab\nif(result.board_url){window.open(result.board_url,'_blank');}// Keep the progress modal open - user can close it manually\n// The progress modal will show completion status and allow manual closure\n};// Handle Trello export error\nconst handleTrelloExportError=error=>{onShowToast(`Trello export failed: ${error.message||'Unknown error'}`,'error');setIsTrelloProgressOpen(false);setCurrentTrelloExportId(null);};// Function to handle adding a new user to JIRA config\nconst handleAddUser=()=>{setJiraConfig(prev=>({...prev,users:[...prev.users,{username:'',email:''}]}));};// Function to handle removing a user from JIRA config\nconst handleRemoveUser=index=>{setJiraConfig(prev=>({...prev,users:prev.users.filter((_,i)=>i!==index)}));};// Function to handle updating user data\nconst handleUpdateUser=(index,field,value)=>{setJiraConfig(prev=>({...prev,users:prev.users.map((user,i)=>i===index?{...user,[field]:value}:user)}));};// Function to validate email format\nconst isValidEmail=email=>{const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return emailRegex.test(email);};// Function to validate project key format\nconst isValidProjectKey=key=>{// JIRA project key requirements: 2-10 uppercase alphanumeric characters\nconst keyRegex=/^[A-Z0-9]{2,10}$/;return keyRegex.test(key);};// Function to validate JIRA configuration\nconst validateJiraConfig=()=>{if(!jiraConfig.projectName.trim()){onShowToast('Project name is required','error');return false;}if(!jiraConfig.projectKey.trim()){onShowToast('Project key is required','error');return false;}if(!isValidProjectKey(jiraConfig.projectKey)){onShowToast('Project key must be 2-10 uppercase alphanumeric characters (e.g., PROJ, TEST123)','error');return false;}if(!jiraConfig.jiraUrl.trim()){onShowToast('JIRA URL is required','error');return false;}if(!jiraConfig.userEmail.trim()){onShowToast('Your email is required','error');return false;}if(!isValidEmail(jiraConfig.userEmail)){onShowToast('Invalid email format','error');return false;}if(!jiraConfig.apiToken.trim()){onShowToast('API token is required','error');return false;}if(!jiraConfig.accountId.trim()){onShowToast('Account ID is required','error');return false;}// Validate URL format\ntry{new URL(jiraConfig.jiraUrl);}catch{onShowToast('Invalid JIRA URL format','error');return false;}return true;};// Function to handle exporting to Trello\nconst handleExportToTrello=async()=>{var _settings$trelloInteg,_settings$trelloInteg2;if(!task||!localTaskTree)return;// Get Trello API key and token from settings\nconst trelloApiKey=(_settings$trelloInteg=settings.trelloIntegration)===null||_settings$trelloInteg===void 0?void 0:_settings$trelloInteg.apiKey;const trelloToken=(_settings$trelloInteg2=settings.trelloIntegration)===null||_settings$trelloInteg2===void 0?void 0:_settings$trelloInteg2.token;// Check if Trello credentials are available\nif(!trelloApiKey||!trelloToken){onShowToast('Please add your Trello API key and token in the Settings page first.','warning');return;}// Validate board name\nif(!boardName.trim()){onShowToast('Board name is required','error');return;}setIsExporting(true);// Close config modal and open progress modal immediately\nonTrelloModalClose();setIsTrelloProgressOpen(true);try{// Prepare the request payload\nconst exportRequest={config:{trello_api_key:trelloApiKey,trello_token:trelloToken,board_name:boardName||`Cahoots: ${task.description.substring(0,BOARD_NAME_MAX_LENGTH)}`},task_tree:localTaskTree};// Make request to start export and get export ID\nconst response=await fetch('/api/trello/start-export',{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('token')||'dev-bypass-token'}`},body:JSON.stringify(exportRequest)});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||`HTTP ${response.status}: ${response.statusText}`);}const result=await response.json();// Update the export ID with the real one from backend\nsetCurrentTrelloExportId(result.export_id);}catch(error){console.error('Error exporting to Trello:',error);handleTrelloExportError({message:error.message});}finally{setIsExporting(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative inline-block text-left mr-2\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"inline-flex items-center px-3 py-1 text-sm bg-blue-500 text-white rounded-md hover:bg-blue-600\",id:\"export-menu-button\",\"aria-expanded\":isDropdownOpen,\"aria-haspopup\":\"true\",onClick:e=>{e.preventDefault();setIsDropdownOpen(!isDropdownOpen);},children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4 mr-1\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M8 7l4-4m0 0l4 4m-4-4v18\"})}),\"Export\"]})}),isDropdownOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none z-50\",role:\"menu\",\"aria-orientation\":\"vertical\",\"aria-labelledby\":\"export-menu-button\",tabIndex:\"-1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"py-1\",role:\"none\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"text-gray-700 dark:text-gray-200 block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600\",role:\"menuitem\",tabIndex:\"-1\",onClick:()=>{handleExportToJson();setIsDropdownOpen(false);},children:\"Export to JSON\"}),/*#__PURE__*/_jsx(\"button\",{className:`${!((_settings$jiraIntegra6=settings.jiraIntegration)!==null&&_settings$jiraIntegra6!==void 0&&_settings$jiraIntegra6.enabled)?'opacity-50 cursor-not-allowed':''} text-gray-700 dark:text-gray-200 block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600`,role:\"menuitem\",tabIndex:\"-1\",onClick:()=>{var _settings$jiraIntegra7;if((_settings$jiraIntegra7=settings.jiraIntegration)!==null&&_settings$jiraIntegra7!==void 0&&_settings$jiraIntegra7.enabled){onJiraModalOpen();setIsDropdownOpen(false);}},title:!((_settings$jiraIntegra8=settings.jiraIntegration)!==null&&_settings$jiraIntegra8!==void 0&&_settings$jiraIntegra8.enabled)?\"Enable JIRA integration in Settings\":\"\",children:\"Export to JIRA\"}),/*#__PURE__*/_jsx(\"button\",{className:`${!((_settings$trelloInteg3=settings.trelloIntegration)!==null&&_settings$trelloInteg3!==void 0&&_settings$trelloInteg3.enabled)?'opacity-50 cursor-not-allowed':''} text-gray-700 dark:text-gray-200 block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600`,role:\"menuitem\",tabIndex:\"-1\",onClick:()=>{var _settings$trelloInteg4;if((_settings$trelloInteg4=settings.trelloIntegration)!==null&&_settings$trelloInteg4!==void 0&&_settings$trelloInteg4.enabled){onTrelloModalOpen();setIsDropdownOpen(false);}},title:!((_settings$trelloInteg5=settings.trelloIntegration)!==null&&_settings$trelloInteg5!==void 0&&_settings$trelloInteg5.enabled)?\"Enable Trello integration in Settings\":\"\",children:\"Export to Trello\"})]})})]}),isTrelloModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg w-full max-w-md\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium\",children:\"Export to Trello\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onTrelloModalClose,className:\"text-gray-500 hover:text-gray-700\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M6 18L18 6M6 6l12 12\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 space-y-4\",children:[(_settings$trelloInteg6=settings.trelloIntegration)!==null&&_settings$trelloInteg6!==void 0&&_settings$trelloInteg6.enabled&&(_settings$trelloInteg7=settings.trelloIntegration)!==null&&_settings$trelloInteg7!==void 0&&_settings$trelloInteg7.apiKey&&(_settings$trelloInteg8=settings.trelloIntegration)!==null&&_settings$trelloInteg8!==void 0&&_settings$trelloInteg8.token?/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-900 dark:text-gray-100\",children:\"Trello Connection\"}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-green-50 dark:bg-green-900 rounded-md\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-green-800 dark:text-green-200\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u2705 Using saved Trello credentials\"}),/*#__PURE__*/_jsx(\"br\",{}),\"API Key: \",settings.trelloIntegration.apiKey.substring(0,8),\"...\",/*#__PURE__*/_jsx(\"br\",{}),\"Token: \",settings.trelloIntegration.token.substring(0,8),\"...\"]})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-yellow-50 dark:bg-yellow-900 rounded-md\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-yellow-800 dark:text-yellow-200\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u26A0\\uFE0F Trello credentials not configured\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Please add your Trello API key and token in the Settings page first.\"]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"Board Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:boardName,onChange:e=>setBoardName(e.target.value),placeholder:\"Enter board name\",className:\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",maxLength:BOARD_NAME_MAX_LENGTH}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Maximum \",BOARD_NAME_MAX_LENGTH,\" characters\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-900 dark:text-gray-100\",children:\"What will be created:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-sm text-gray-600 dark:text-gray-400 space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Trello board with your specified name\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Lists for task organization (To Do, In Progress, Done)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Cards for each task with descriptions and story points\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Labels for different task types and priorities\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Checklists for subtasks within parent cards\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end p-4 border-t border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 mr-2 text-sm bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-300 dark:hover:bg-gray-600\",onClick:onTrelloModalClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 text-sm bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:handleExportToTrello,disabled:isExporting||!boardName.trim()||!((_settings$trelloInteg9=settings.trelloIntegration)!==null&&_settings$trelloInteg9!==void 0&&_settings$trelloInteg9.apiKey)||!((_settings$trelloInteg0=settings.trelloIntegration)!==null&&_settings$trelloInteg0!==void 0&&_settings$trelloInteg0.token),children:isExporting?'Creating Trello Board...':'Export to Trello'})]})]})}),isJiraModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg w-full max-w-2xl max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium\",children:\"Configure JIRA Export\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onJiraModalClose,className:\"text-gray-500 hover:text-gray-700\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M6 18L18 6M6 6l12 12\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 space-y-6\",children:[(_settings$jiraIntegra9=settings.jiraIntegration)!==null&&_settings$jiraIntegra9!==void 0&&_settings$jiraIntegra9.enabled&&(_settings$jiraIntegra0=settings.jiraIntegration)!==null&&_settings$jiraIntegra0!==void 0&&_settings$jiraIntegra0.jiraUrl&&(_settings$jiraIntegra1=settings.jiraIntegration)!==null&&_settings$jiraIntegra1!==void 0&&_settings$jiraIntegra1.userEmail&&(_settings$jiraIntegra10=settings.jiraIntegration)!==null&&_settings$jiraIntegra10!==void 0&&_settings$jiraIntegra10.apiToken&&(_settings$jiraIntegra11=settings.jiraIntegration)!==null&&_settings$jiraIntegra11!==void 0&&_settings$jiraIntegra11.accountId?/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-900 dark:text-gray-100\",children:\"JIRA Connection\"}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-green-50 dark:bg-green-900 rounded-md\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-green-800 dark:text-green-200\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Using saved JIRA credentials:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"URL: \",settings.jiraIntegration.jiraUrl,/*#__PURE__*/_jsx(\"br\",{}),\"Email: \",settings.jiraIntegration.userEmail,/*#__PURE__*/_jsx(\"br\",{}),\"Account ID: \",settings.jiraIntegration.accountId]})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-900 dark:text-gray-100\",children:\"JIRA Connection\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"JIRA URL\"}),/*#__PURE__*/_jsx(\"input\",{type:\"url\",value:jiraConfig.jiraUrl,onChange:e=>setJiraConfig(prev=>({...prev,jiraUrl:e.target.value})),placeholder:\"https://your-domain.atlassian.net\",className:\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"Your Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:jiraConfig.userEmail,onChange:e=>setJiraConfig(prev=>({...prev,userEmail:e.target.value})),placeholder:\"your.email@example.com\",className:\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"API Token\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:jiraConfig.apiToken,onChange:e=>setJiraConfig(prev=>({...prev,apiToken:e.target.value})),placeholder:\"Your JIRA API token\",className:\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"Atlassian Account ID\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:jiraConfig.accountId,onChange:e=>setJiraConfig(prev=>({...prev,accountId:e.target.value})),placeholder:\"Your Atlassian account ID\",className:\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Find your account ID at\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://id.atlassian.com/manage-profile/profile-and-visibility\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"underline\",children:\"Atlassian Account Settings\"}),' ',\"(usually starts with \\\"5\\\" and is 24 characters long)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-blue-50 dark:bg-blue-900 rounded-md\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-blue-800 dark:text-blue-200\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"How to get your API token:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"1. Go to \",/*#__PURE__*/_jsx(\"a\",{href:\"https://id.atlassian.com/manage-profile/security/api-tokens\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"underline\",children:\"Atlassian Account Settings\"}),/*#__PURE__*/_jsx(\"br\",{}),\"2. Click \\\"Create API token\\\"\",/*#__PURE__*/_jsx(\"br\",{}),\"3. Copy the token and paste it above\"]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-900 dark:text-gray-100\",children:\"Project Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"Project Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:jiraConfig.projectName,onChange:e=>setJiraConfig(prev=>({...prev,projectName:e.target.value})),placeholder:\"Enter project name\",className:\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"Project Key\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:jiraConfig.projectKey,onChange:e=>{const value=e.target.value.toUpperCase().replace(/[^A-Z0-9]/g,'').substring(0,10);setJiraConfig(prev=>({...prev,projectKey:value}));},placeholder:\"PROJ\",className:`w-full p-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white ${jiraConfig.projectKey&&!isValidProjectKey(jiraConfig.projectKey)?'border-red-500 dark:border-red-400':'border-gray-300 dark:border-gray-600'}`,maxLength:\"10\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"2-10 uppercase alphanumeric characters (e.g., PROJ, TEST123)\"}),jiraConfig.projectKey&&!isValidProjectKey(jiraConfig.projectKey)&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-red-500 mt-1\",children:\"Invalid format: use only uppercase letters and numbers\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-900 dark:text-gray-100\",children:\"What will be created:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-sm text-gray-600 dark:text-gray-400 space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 JIRA project with your specified name and key\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Epics for each non-atomic first-level subtask\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Stories for each atomic first-level subtask\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Sub-tasks for all child tasks, linked to their parents\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Story point estimates included in issue details\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Confluence pages for tech stack, best practices, and project standards\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end p-4 border-t border-gray-200 dark:border-gray-700 space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 text-sm bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-300 dark:hover:bg-gray-600\",onClick:onJiraModalClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 text-sm bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:()=>{if(validateJiraConfig()){handleExportToJira();}},disabled:isExporting,children:isExporting?'Creating JIRA Project...':'Export to JIRA'})]})]})}),/*#__PURE__*/_jsx(JiraExportProgress,{isOpen:isJiraProgressOpen,onClose:()=>setIsJiraProgressOpen(false),exportId:currentExportId,onSuccess:handleJiraExportSuccess,onError:handleJiraExportError}),/*#__PURE__*/_jsx(TrelloExportProgress,{isOpen:isTrelloProgressOpen,onClose:()=>setIsTrelloProgressOpen(false),exportId:currentTrelloExportId,onSuccess:handleTrelloExportSuccess,onError:handleTrelloExportError})]});};export default ExportModal;","map":{"version":3,"names":["React","useState","useSettings","apiClient","withErrorHandling","LoadingTypes","JiraExportProgress","TrelloExportProgress","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EXPORT_FILENAME_MAX_LENGTH","BOARD_NAME_MAX_LENGTH","ExportModal","_ref","_settings$jiraIntegra6","_settings$jiraIntegra8","_settings$trelloInteg3","_settings$trelloInteg5","_settings$trelloInteg6","_settings$trelloInteg7","_settings$trelloInteg8","_settings$trelloInteg9","_settings$trelloInteg0","_settings$jiraIntegra9","_settings$jiraIntegra0","_settings$jiraIntegra1","_settings$jiraIntegra10","_settings$jiraIntegra11","task","localTaskTree","onShowToast","isTrelloModalOpen","setIsTrelloModalOpen","isJiraModalOpen","setIsJiraModalOpen","isJiraProgressOpen","setIsJiraProgressOpen","isTrelloProgressOpen","setIsTrelloProgressOpen","isDropdownOpen","setIsDropdownOpen","boardName","setBoardName","isExporting","setIsExporting","currentExportId","setCurrentExportId","currentTrelloExportId","setCurrentTrelloExportId","exportResult","setExportResult","jiraConfig","setJiraConfig","projectName","projectKey","jiraUrl","apiToken","userEmail","accountId","users","username","email","settings","onTrelloModalOpen","description","split","substring","onTrelloModalClose","onJiraModalOpen","_settings$jiraIntegra","_settings$jiraIntegra2","_settings$jiraIntegra3","_settings$jiraIntegra4","_settings$jiraIntegra5","jiraIntegration","onJiraModalClose","handleExportToJson","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","handleExportToJira","exportRequest","config","jira_url","user_email","api_token","account_id","project_name","project_key","task_tree","response","fetch","method","headers","localStorage","getItem","body","ok","errorData","json","Error","detail","status","statusText","result","export_id","error","console","handleJiraExportError","message","handleJiraExportSuccess","issues_created","project_url","window","open","handleTrelloExportSuccess","cards_created","board_url","handleTrelloExportError","handleAddUser","prev","handleRemoveUser","index","filter","_","i","handleUpdateUser","field","value","map","user","isValidEmail","emailRegex","test","isValidProjectKey","key","keyRegex","validateJiraConfig","trim","URL","handleExportToTrello","_settings$trelloInteg","_settings$trelloInteg2","trelloApiKey","trelloIntegration","apiKey","trelloToken","token","trello_api_key","trello_token","board_name","children","className","type","id","onClick","e","preventDefault","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","role","tabIndex","enabled","_settings$jiraIntegra7","title","_settings$trelloInteg4","onChange","target","placeholder","maxLength","disabled","href","rel","toUpperCase","replace","isOpen","onClose","exportId","onSuccess","onError"],"sources":["/app/src/components/ExportModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSettings } from '../contexts/SettingsContext';\nimport apiClient from '../services/unifiedApiClient';\nimport { withErrorHandling } from '../services/errorHandler';\nimport { LoadingTypes } from '../services/loadingService';\nimport JiraExportProgress from './JiraExportProgress';\nimport TrelloExportProgress from './TrelloExportProgress';\n\n// Constants for export functionality\nconst EXPORT_FILENAME_MAX_LENGTH = 30;\nconst BOARD_NAME_MAX_LENGTH = 30;\n\nconst ExportModal = ({ \n  task, \n  localTaskTree, \n  onShowToast \n}) => {\n  const [isTrelloModalOpen, setIsTrelloModalOpen] = useState(false);\n  const [isJiraModalOpen, setIsJiraModalOpen] = useState(false);\n  const [isJiraProgressOpen, setIsJiraProgressOpen] = useState(false);\n  const [isTrelloProgressOpen, setIsTrelloProgressOpen] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [boardName, setBoardName] = useState('');\n  const [isExporting, setIsExporting] = useState(false);\n  const [currentExportId, setCurrentExportId] = useState(null);\n  const [currentTrelloExportId, setCurrentTrelloExportId] = useState(null);\n  const [exportResult, setExportResult] = useState(null);\n  const [jiraConfig, setJiraConfig] = useState({\n    projectName: '',\n    projectKey: '',\n    jiraUrl: '',\n    apiToken: '',\n    userEmail: '',\n    accountId: '',\n    users: [{ username: '', email: '' }]\n  });\n  const { settings } = useSettings();\n\n  const onTrelloModalOpen = () => {\n    // Pre-fill board name from task description\n    if (task?.description) {\n      setBoardName(`Cahoots: ${task.description.split('\\n')[0].substring(0, BOARD_NAME_MAX_LENGTH)}`);\n    }\n    setIsTrelloModalOpen(true);\n  };\n  const onTrelloModalClose = () => setIsTrelloModalOpen(false);\n  const onJiraModalOpen = () => {\n    // Always show the modal for project configuration, but pre-fill credentials if available\n    setJiraConfig({\n      projectName: task?.description ? `Cahoots: ${task.description.split('\\n')[0].substring(0, 30)}` : 'Cahoots Project',\n      projectKey: 'CAHOOTS',\n      jiraUrl: settings.jiraIntegration?.jiraUrl || 'https://your-domain.atlassian.net',\n      apiToken: settings.jiraIntegration?.apiToken || '',\n      userEmail: settings.jiraIntegration?.userEmail || '',\n      accountId: settings.jiraIntegration?.accountId || '',\n      users: [{ username: 'project-admin', email: settings.jiraIntegration?.userEmail || '' }]\n    });\n    setIsJiraModalOpen(true);\n  };\n  const onJiraModalClose = () => setIsJiraModalOpen(false);\n\n  // Function to handle exporting to JSON\n  const handleExportToJson = () => {\n    if (!task) return;\n    \n    // Create a JSON file from the task tree\n    const dataStr = JSON.stringify(localTaskTree, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    // Create a download link and trigger the download\n    const exportFileDefaultName = `${task.description.split('\\n')[0].substring(0, EXPORT_FILENAME_MAX_LENGTH)}-task-tree.json`;\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  // Function to handle exporting to JIRA via backend API\n  const handleExportToJira = async () => {\n    if (!task || !localTaskTree) return;\n    \n    setIsExporting(true);\n    \n    // Close config modal and open progress modal immediately  \n    onJiraModalClose();\n    setIsJiraProgressOpen(true);\n    \n    try {\n      // Prepare the request payload\n      const exportRequest = {\n        config: {\n          jira_url: jiraConfig.jiraUrl,\n          user_email: jiraConfig.userEmail,\n          api_token: jiraConfig.apiToken,\n          account_id: jiraConfig.accountId,\n          project_name: jiraConfig.projectName,\n          project_key: jiraConfig.projectKey,\n          users: jiraConfig.users\n        },\n        task_tree: localTaskTree\n      };\n\n      // Make request to start export and get export ID\n      const response = await fetch('/api/jira/start-export', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token') || 'dev-bypass-token'}`\n        },\n        body: JSON.stringify(exportRequest)\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || `HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      \n      // Update the export ID with the real one from backend\n      setCurrentExportId(result.export_id);\n      \n    } catch (error) {\n      console.error('Error exporting to JIRA:', error);\n      handleJiraExportError({ message: error.message });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // Handle successful JIRA export\n  const handleJiraExportSuccess = (result) => {\n    onShowToast(`Successfully created JIRA project with ${result.issues_created} issues`, 'success');\n    \n    // Open the project in a new tab\n    if (result.project_url) {\n      window.open(result.project_url, '_blank');\n    }\n    \n    // Keep the progress modal open - user can close it manually\n    // The progress modal will show completion status and allow manual closure\n  };\n\n  // Handle JIRA export error\n  const handleJiraExportError = (error) => {\n    onShowToast(`JIRA export failed: ${error.message || 'Unknown error'}`, 'error');\n    setIsJiraProgressOpen(false);\n    setCurrentExportId(null);\n  };\n\n  // Handle successful Trello export\n  const handleTrelloExportSuccess = (result) => {\n    onShowToast(`Successfully created Trello board with ${result.cards_created} cards`, 'success');\n    \n    // Open the board in a new tab\n    if (result.board_url) {\n      window.open(result.board_url, '_blank');\n    }\n    \n    // Keep the progress modal open - user can close it manually\n    // The progress modal will show completion status and allow manual closure\n  };\n\n  // Handle Trello export error\n  const handleTrelloExportError = (error) => {\n    onShowToast(`Trello export failed: ${error.message || 'Unknown error'}`, 'error');\n    setIsTrelloProgressOpen(false);\n    setCurrentTrelloExportId(null);\n  };\n\n  // Function to handle adding a new user to JIRA config\n  const handleAddUser = () => {\n    setJiraConfig(prev => ({\n      ...prev,\n      users: [...prev.users, { username: '', email: '' }]\n    }));\n  };\n\n  // Function to handle removing a user from JIRA config\n  const handleRemoveUser = (index) => {\n    setJiraConfig(prev => ({\n      ...prev,\n      users: prev.users.filter((_, i) => i !== index)\n    }));\n  };\n\n  // Function to handle updating user data\n  const handleUpdateUser = (index, field, value) => {\n    setJiraConfig(prev => ({\n      ...prev,\n      users: prev.users.map((user, i) => \n        i === index ? { ...user, [field]: value } : user\n      )\n    }));\n  };\n\n  // Function to validate email format\n  const isValidEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  // Function to validate project key format\n  const isValidProjectKey = (key) => {\n    // JIRA project key requirements: 2-10 uppercase alphanumeric characters\n    const keyRegex = /^[A-Z0-9]{2,10}$/;\n    return keyRegex.test(key);\n  };\n\n  // Function to validate JIRA configuration\n  const validateJiraConfig = () => {\n    if (!jiraConfig.projectName.trim()) {\n      onShowToast('Project name is required', 'error');\n      return false;\n    }\n    if (!jiraConfig.projectKey.trim()) {\n      onShowToast('Project key is required', 'error');\n      return false;\n    }\n    if (!isValidProjectKey(jiraConfig.projectKey)) {\n      onShowToast('Project key must be 2-10 uppercase alphanumeric characters (e.g., PROJ, TEST123)', 'error');\n      return false;\n    }\n    if (!jiraConfig.jiraUrl.trim()) {\n      onShowToast('JIRA URL is required', 'error');\n      return false;\n    }\n    if (!jiraConfig.userEmail.trim()) {\n      onShowToast('Your email is required', 'error');\n      return false;\n    }\n    if (!isValidEmail(jiraConfig.userEmail)) {\n      onShowToast('Invalid email format', 'error');\n      return false;\n    }\n    if (!jiraConfig.apiToken.trim()) {\n      onShowToast('API token is required', 'error');\n      return false;\n    }\n    if (!jiraConfig.accountId.trim()) {\n      onShowToast('Account ID is required', 'error');\n      return false;\n    }\n    \n    // Validate URL format\n    try {\n      new URL(jiraConfig.jiraUrl);\n    } catch {\n      onShowToast('Invalid JIRA URL format', 'error');\n      return false;\n    }\n    \n    return true;\n  };\n\n  // Function to handle exporting to Trello\n  const handleExportToTrello = async () => {\n    if (!task || !localTaskTree) return;\n    \n    // Get Trello API key and token from settings\n    const trelloApiKey = settings.trelloIntegration?.apiKey;\n    const trelloToken = settings.trelloIntegration?.token;\n    \n    // Check if Trello credentials are available\n    if (!trelloApiKey || !trelloToken) {\n      onShowToast('Please add your Trello API key and token in the Settings page first.', 'warning');\n      return;\n    }\n    \n    // Validate board name\n    if (!boardName.trim()) {\n      onShowToast('Board name is required', 'error');\n      return;\n    }\n    \n    setIsExporting(true);\n    \n    // Close config modal and open progress modal immediately\n    onTrelloModalClose();\n    setIsTrelloProgressOpen(true);\n    \n    try {\n      // Prepare the request payload\n      const exportRequest = {\n        config: {\n          trello_api_key: trelloApiKey,\n          trello_token: trelloToken,\n          board_name: boardName || `Cahoots: ${task.description.substring(0, BOARD_NAME_MAX_LENGTH)}`\n        },\n        task_tree: localTaskTree\n      };\n\n      // Make request to start export and get export ID\n      const response = await fetch('/api/trello/start-export', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token') || 'dev-bypass-token'}`\n        },\n        body: JSON.stringify(exportRequest)\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || `HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      \n      // Update the export ID with the real one from backend\n      setCurrentTrelloExportId(result.export_id);\n      \n    } catch (error) {\n      console.error('Error exporting to Trello:', error);\n      handleTrelloExportError({ message: error.message });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  return (\n    <>\n      {/* Export Dropdown */}\n      <div className=\"relative inline-block text-left mr-2\">\n        <div>\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center px-3 py-1 text-sm bg-blue-500 text-white rounded-md hover:bg-blue-600\"\n            id=\"export-menu-button\"\n            aria-expanded={isDropdownOpen}\n            aria-haspopup=\"true\"\n            onClick={(e) => {\n              e.preventDefault();\n              setIsDropdownOpen(!isDropdownOpen);\n            }}\n          >\n            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7l4-4m0 0l4 4m-4-4v18\" />\n            </svg>\n            Export\n          </button>\n        </div>\n        {isDropdownOpen && (\n          <div\n            className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none z-50\"\n            role=\"menu\"\n            aria-orientation=\"vertical\"\n            aria-labelledby=\"export-menu-button\"\n            tabIndex=\"-1\"\n          >\n          <div className=\"py-1\" role=\"none\">\n            <button\n              className=\"text-gray-700 dark:text-gray-200 block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600\"\n              role=\"menuitem\"\n              tabIndex=\"-1\"\n              onClick={() => {\n                handleExportToJson();\n                setIsDropdownOpen(false);\n              }}\n            >\n              Export to JSON\n            </button>\n            <button\n              className={`${!settings.jiraIntegration?.enabled ? 'opacity-50 cursor-not-allowed' : ''} text-gray-700 dark:text-gray-200 block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600`}\n              role=\"menuitem\"\n              tabIndex=\"-1\"\n              onClick={() => {\n                if (settings.jiraIntegration?.enabled) {\n                  onJiraModalOpen();\n                  setIsDropdownOpen(false);\n                }\n              }}\n              title={!settings.jiraIntegration?.enabled ? \"Enable JIRA integration in Settings\" : \"\"}\n            >\n              Export to JIRA\n            </button>\n            <button\n              className={`${!settings.trelloIntegration?.enabled ? 'opacity-50 cursor-not-allowed' : ''} text-gray-700 dark:text-gray-200 block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600`}\n              role=\"menuitem\"\n              tabIndex=\"-1\"\n              onClick={() => {\n                if (settings.trelloIntegration?.enabled) {\n                  onTrelloModalOpen();\n                  setIsDropdownOpen(false);\n                }\n              }}\n              title={!settings.trelloIntegration?.enabled ? \"Enable Trello integration in Settings\" : \"\"}\n            >\n              Export to Trello\n            </button>\n          </div>\n          </div>\n        )}\n      </div>\n\n      {/* Export to Trello Modal */}\n      {isTrelloModalOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg w-full max-w-md\">\n            <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n              <h2 className=\"text-lg font-medium\">Export to Trello</h2>\n              <button onClick={onTrelloModalClose} className=\"text-gray-500 hover:text-gray-700\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div className=\"p-4 space-y-4\">\n              {/* Trello Connection Status */}\n              {settings.trelloIntegration?.enabled && settings.trelloIntegration?.apiKey && \n               settings.trelloIntegration?.token ? (\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100\">Trello Connection</h3>\n                  <div className=\"p-3 bg-green-50 dark:bg-green-900 rounded-md\">\n                    <p className=\"text-sm text-green-800 dark:text-green-200\">\n                      <strong>✅ Using saved Trello credentials</strong><br/>\n                      API Key: {settings.trelloIntegration.apiKey.substring(0, 8)}...<br/>\n                      Token: {settings.trelloIntegration.token.substring(0, 8)}...\n                    </p>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"p-3 bg-yellow-50 dark:bg-yellow-900 rounded-md\">\n                  <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\n                    <strong>⚠️ Trello credentials not configured</strong><br/>\n                    Please add your Trello API key and token in the Settings page first.\n                  </p>\n                </div>\n              )}\n              \n              {/* Board Name Input */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Board Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={boardName}\n                  onChange={(e) => setBoardName(e.target.value)}\n                  placeholder=\"Enter board name\"\n                  className=\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  maxLength={BOARD_NAME_MAX_LENGTH}\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Maximum {BOARD_NAME_MAX_LENGTH} characters\n                </p>\n              </div>\n              \n              {/* Export Details */}\n              <div className=\"space-y-2\">\n                <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100\">What will be created:</h3>\n                <ul className=\"text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n                  <li>• Trello board with your specified name</li>\n                  <li>• Lists for task organization (To Do, In Progress, Done)</li>\n                  <li>• Cards for each task with descriptions and story points</li>\n                  <li>• Labels for different task types and priorities</li>\n                  <li>• Checklists for subtasks within parent cards</li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"flex justify-end p-4 border-t border-gray-200 dark:border-gray-700\">\n              <button\n                className=\"px-4 py-2 mr-2 text-sm bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-300 dark:hover:bg-gray-600\"\n                onClick={onTrelloModalClose}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"px-4 py-2 text-sm bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                onClick={handleExportToTrello}\n                disabled={isExporting || !boardName.trim() || !settings.trelloIntegration?.apiKey || !settings.trelloIntegration?.token}\n              >\n                {isExporting ? 'Creating Trello Board...' : 'Export to Trello'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Export to JIRA Configuration Modal */}\n      {isJiraModalOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n              <h2 className=\"text-lg font-medium\">Configure JIRA Export</h2>\n              <button onClick={onJiraModalClose} className=\"text-gray-500 hover:text-gray-700\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            <div className=\"p-6 space-y-6\">\n              {/* JIRA Connection */}\n              {settings.jiraIntegration?.enabled && settings.jiraIntegration?.jiraUrl && \n               settings.jiraIntegration?.userEmail && settings.jiraIntegration?.apiToken && \n               settings.jiraIntegration?.accountId ? (\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100\">JIRA Connection</h3>\n                  <div className=\"p-3 bg-green-50 dark:bg-green-900 rounded-md\">\n                    <p className=\"text-sm text-green-800 dark:text-green-200\">\n                      <strong>Using saved JIRA credentials:</strong><br/>\n                      URL: {settings.jiraIntegration.jiraUrl}<br/>\n                      Email: {settings.jiraIntegration.userEmail}<br/>\n                      Account ID: {settings.jiraIntegration.accountId}\n                    </p>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100\">JIRA Connection</h3>\n                  \n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                        JIRA URL\n                      </label>\n                      <input\n                        type=\"url\"\n                        value={jiraConfig.jiraUrl}\n                        onChange={(e) => setJiraConfig(prev => ({ ...prev, jiraUrl: e.target.value }))}\n                        placeholder=\"https://your-domain.atlassian.net\"\n                        className=\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                          Your Email\n                        </label>\n                        <input\n                          type=\"email\"\n                          value={jiraConfig.userEmail}\n                          onChange={(e) => setJiraConfig(prev => ({ ...prev, userEmail: e.target.value }))}\n                          placeholder=\"your.email@example.com\"\n                          className=\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                          API Token\n                        </label>\n                        <input\n                          type=\"password\"\n                          value={jiraConfig.apiToken}\n                          onChange={(e) => setJiraConfig(prev => ({ ...prev, apiToken: e.target.value }))}\n                          placeholder=\"Your JIRA API token\"\n                          className=\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                        />\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                        Atlassian Account ID\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={jiraConfig.accountId}\n                        onChange={(e) => setJiraConfig(prev => ({ ...prev, accountId: e.target.value }))}\n                        placeholder=\"Your Atlassian account ID\"\n                        className=\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        Find your account ID at{' '}\n                        <a href=\"https://id.atlassian.com/manage-profile/profile-and-visibility\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline\">\n                          Atlassian Account Settings\n                        </a>\n                        {' '}(usually starts with \"5\" and is 24 characters long)\n                      </p>\n                    </div>\n                    \n                    <div className=\"p-3 bg-blue-50 dark:bg-blue-900 rounded-md\">\n                      <p className=\"text-xs text-blue-800 dark:text-blue-200\">\n                        <strong>How to get your API token:</strong><br/>\n                        1. Go to <a href=\"https://id.atlassian.com/manage-profile/security/api-tokens\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline\">Atlassian Account Settings</a><br/>\n                        2. Click \"Create API token\"<br/>\n                        3. Copy the token and paste it above\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Project Configuration */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100\">Project Configuration</h3>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                      Project Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={jiraConfig.projectName}\n                      onChange={(e) => setJiraConfig(prev => ({ ...prev, projectName: e.target.value }))}\n                      placeholder=\"Enter project name\"\n                      className=\"w-full p-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                      Project Key\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={jiraConfig.projectKey}\n                      onChange={(e) => {\n                        const value = e.target.value.toUpperCase().replace(/[^A-Z0-9]/g, '').substring(0, 10);\n                        setJiraConfig(prev => ({ ...prev, projectKey: value }));\n                      }}\n                      placeholder=\"PROJ\"\n                      className={`w-full p-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white ${\n                        jiraConfig.projectKey && !isValidProjectKey(jiraConfig.projectKey) \n                          ? 'border-red-500 dark:border-red-400' \n                          : 'border-gray-300 dark:border-gray-600'\n                      }`}\n                      maxLength=\"10\"\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      2-10 uppercase alphanumeric characters (e.g., PROJ, TEST123)\n                    </p>\n                    {jiraConfig.projectKey && !isValidProjectKey(jiraConfig.projectKey) && (\n                      <p className=\"text-xs text-red-500 mt-1\">\n                        Invalid format: use only uppercase letters and numbers\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* Export Details */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100\">What will be created:</h3>\n                <ul className=\"text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n                  <li>• JIRA project with your specified name and key</li>\n                  <li>• Epics for each non-atomic first-level subtask</li>\n                  <li>• Stories for each atomic first-level subtask</li>\n                  <li>• Sub-tasks for all child tasks, linked to their parents</li>\n                  <li>• Story point estimates included in issue details</li>\n                  <li>• Confluence pages for tech stack, best practices, and project standards</li>\n                </ul>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end p-4 border-t border-gray-200 dark:border-gray-700 space-x-2\">\n              <button\n                className=\"px-4 py-2 text-sm bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-300 dark:hover:bg-gray-600\"\n                onClick={onJiraModalClose}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"px-4 py-2 text-sm bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                onClick={() => {\n                  if (validateJiraConfig()) {\n                    handleExportToJira();\n                  }\n                }}\n                disabled={isExporting}\n              >\n                {isExporting ? 'Creating JIRA Project...' : 'Export to JIRA'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* JIRA Export Progress Modal */}\n      <JiraExportProgress\n        isOpen={isJiraProgressOpen}\n        onClose={() => setIsJiraProgressOpen(false)}\n        exportId={currentExportId}\n        onSuccess={handleJiraExportSuccess}\n        onError={handleJiraExportError}\n      />\n\n      {/* Trello Export Progress Modal */}\n      <TrelloExportProgress\n        isOpen={isTrelloProgressOpen}\n        onClose={() => setIsTrelloProgressOpen(false)}\n        exportId={currentTrelloExportId}\n        onSuccess={handleTrelloExportSuccess}\n        onError={handleTrelloExportError}\n      />\n    </>\n  );\n};\n\nexport default ExportModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}