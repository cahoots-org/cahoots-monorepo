{"ast":null,"code":"// Simplified App Context - Replaces complex multiple context providers\nimport React,{createContext,useContext,useReducer,useEffect}from'react';import{useAuth}from'./AuthContext';// App state shape\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={// UI state\nsidebarOpen:false,theme:'dark',// Current selections\ncurrentTaskId:null,// UI feedback\nnotifications:[],// Loading states for global operations\nglobalLoading:false,// Error state\nglobalError:null};// Action types\nconst ActionTypes={SET_SIDEBAR_OPEN:'SET_SIDEBAR_OPEN',SET_CURRENT_TASK_ID:'SET_CURRENT_TASK_ID',SET_THEME:'SET_THEME',ADD_NOTIFICATION:'ADD_NOTIFICATION',REMOVE_NOTIFICATION:'REMOVE_NOTIFICATION',SET_GLOBAL_LOADING:'SET_GLOBAL_LOADING',SET_GLOBAL_ERROR:'SET_GLOBAL_ERROR',CLEAR_GLOBAL_ERROR:'CLEAR_GLOBAL_ERROR'};// Reducer function\nfunction appReducer(state,action){switch(action.type){case ActionTypes.SET_SIDEBAR_OPEN:return{...state,sidebarOpen:action.payload};case ActionTypes.SET_CURRENT_TASK_ID:return{...state,currentTaskId:action.payload};case ActionTypes.SET_THEME:return{...state,theme:action.payload};case ActionTypes.ADD_NOTIFICATION:return{...state,notifications:[...state.notifications,{id:Date.now()+Math.random(),timestamp:new Date(),...action.payload}]};case ActionTypes.REMOVE_NOTIFICATION:return{...state,notifications:state.notifications.filter(notification=>notification.id!==action.payload)};case ActionTypes.SET_GLOBAL_LOADING:return{...state,globalLoading:action.payload};case ActionTypes.SET_GLOBAL_ERROR:return{...state,globalError:action.payload,globalLoading:false};case ActionTypes.CLEAR_GLOBAL_ERROR:return{...state,globalError:null};default:return state;}}// Create context\nconst AppContext=/*#__PURE__*/createContext();// Context provider\nexport const AppProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(appReducer,initialState);const{user}=useAuth();// Auto-clear notifications after 5 seconds\nuseEffect(()=>{state.notifications.forEach(notification=>{if(notification.autoHide!==false){setTimeout(()=>{dispatch({type:ActionTypes.REMOVE_NOTIFICATION,payload:notification.id});},5000);}});},[state.notifications]);// Action creators\nconst actions={// UI actions\nsetSidebarOpen:open=>{dispatch({type:ActionTypes.SET_SIDEBAR_OPEN,payload:open});},setCurrentTaskId:taskId=>{dispatch({type:ActionTypes.SET_CURRENT_TASK_ID,payload:taskId});},setTheme:theme=>{dispatch({type:ActionTypes.SET_THEME,payload:theme});// Persist theme preference\nlocalStorage.setItem('theme',theme);},// Notification actions\naddNotification:notification=>{dispatch({type:ActionTypes.ADD_NOTIFICATION,payload:notification});},showSuccess:function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};actions.addNotification({type:'success',message,...options});},showError:function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};actions.addNotification({type:'error',message,autoHide:false,// Errors don't auto-hide\n...options});},showWarning:function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};actions.addNotification({type:'warning',message,...options});},showInfo:function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};actions.addNotification({type:'info',message,...options});},removeNotification:id=>{dispatch({type:ActionTypes.REMOVE_NOTIFICATION,payload:id});},// Global state actions\nsetGlobalLoading:loading=>{dispatch({type:ActionTypes.SET_GLOBAL_LOADING,payload:loading});},setGlobalError:error=>{dispatch({type:ActionTypes.SET_GLOBAL_ERROR,payload:error});},clearGlobalError:()=>{dispatch({type:ActionTypes.CLEAR_GLOBAL_ERROR});}};// Initialize theme from localStorage\nuseEffect(()=>{const savedTheme=localStorage.getItem('theme');if(savedTheme&&savedTheme!==state.theme){actions.setTheme(savedTheme);}},[]);// Context value\nconst contextValue={// State\n...state,// Actions\n...actions,// Computed values\nisAuthenticated:!!user,hasNotifications:state.notifications.length>0};return/*#__PURE__*/_jsx(AppContext.Provider,{value:contextValue,children:children});};// Custom hook to use the app context\nexport const useApp=()=>{const context=useContext(AppContext);if(!context){throw new Error('useApp must be used within an AppProvider');}return context;};export default AppContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useAuth","jsx","_jsx","initialState","sidebarOpen","theme","currentTaskId","notifications","globalLoading","globalError","ActionTypes","SET_SIDEBAR_OPEN","SET_CURRENT_TASK_ID","SET_THEME","ADD_NOTIFICATION","REMOVE_NOTIFICATION","SET_GLOBAL_LOADING","SET_GLOBAL_ERROR","CLEAR_GLOBAL_ERROR","appReducer","state","action","type","payload","id","Date","now","Math","random","timestamp","filter","notification","AppContext","AppProvider","_ref","children","dispatch","user","forEach","autoHide","setTimeout","actions","setSidebarOpen","open","setCurrentTaskId","taskId","setTheme","localStorage","setItem","addNotification","showSuccess","message","options","arguments","length","undefined","showError","showWarning","showInfo","removeNotification","setGlobalLoading","loading","setGlobalError","error","clearGlobalError","savedTheme","getItem","contextValue","isAuthenticated","hasNotifications","Provider","value","useApp","context","Error"],"sources":["/app/src/contexts/AppContext.js"],"sourcesContent":["// Simplified App Context - Replaces complex multiple context providers\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\n\n// App state shape\nconst initialState = {\n  // UI state\n  sidebarOpen: false,\n  theme: 'dark',\n  \n  // Current selections\n  currentTaskId: null,\n  \n  // UI feedback\n  notifications: [],\n  \n  // Loading states for global operations\n  globalLoading: false,\n  \n  // Error state\n  globalError: null,\n};\n\n// Action types\nconst ActionTypes = {\n  SET_SIDEBAR_OPEN: 'SET_SIDEBAR_OPEN',\n  SET_CURRENT_TASK_ID: 'SET_CURRENT_TASK_ID',\n  SET_THEME: 'SET_THEME',\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\n  SET_GLOBAL_LOADING: 'SET_GLOBAL_LOADING',\n  SET_GLOBAL_ERROR: 'SET_GLOBAL_ERROR',\n  CLEAR_GLOBAL_ERROR: 'CLEAR_GLOBAL_ERROR',\n};\n\n// Reducer function\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case ActionTypes.SET_SIDEBAR_OPEN:\n      return {\n        ...state,\n        sidebarOpen: action.payload,\n      };\n\n    case ActionTypes.SET_CURRENT_TASK_ID:\n      return {\n        ...state,\n        currentTaskId: action.payload,\n      };\n\n    case ActionTypes.SET_THEME:\n      return {\n        ...state,\n        theme: action.payload,\n      };\n\n    case ActionTypes.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, {\n          id: Date.now() + Math.random(),\n          timestamp: new Date(),\n          ...action.payload,\n        }],\n      };\n\n    case ActionTypes.REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(\n          notification => notification.id !== action.payload\n        ),\n      };\n\n    case ActionTypes.SET_GLOBAL_LOADING:\n      return {\n        ...state,\n        globalLoading: action.payload,\n      };\n\n    case ActionTypes.SET_GLOBAL_ERROR:\n      return {\n        ...state,\n        globalError: action.payload,\n        globalLoading: false,\n      };\n\n    case ActionTypes.CLEAR_GLOBAL_ERROR:\n      return {\n        ...state,\n        globalError: null,\n      };\n\n    default:\n      return state;\n  }\n}\n\n// Create context\nconst AppContext = createContext();\n\n// Context provider\nexport const AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  const { user } = useAuth();\n\n  // Auto-clear notifications after 5 seconds\n  useEffect(() => {\n    state.notifications.forEach(notification => {\n      if (notification.autoHide !== false) {\n        setTimeout(() => {\n          dispatch({\n            type: ActionTypes.REMOVE_NOTIFICATION,\n            payload: notification.id,\n          });\n        }, 5000);\n      }\n    });\n  }, [state.notifications]);\n\n  // Action creators\n  const actions = {\n    // UI actions\n    setSidebarOpen: (open) => {\n      dispatch({\n        type: ActionTypes.SET_SIDEBAR_OPEN,\n        payload: open,\n      });\n    },\n\n    setCurrentTaskId: (taskId) => {\n      dispatch({\n        type: ActionTypes.SET_CURRENT_TASK_ID,\n        payload: taskId,\n      });\n    },\n\n    setTheme: (theme) => {\n      dispatch({\n        type: ActionTypes.SET_THEME,\n        payload: theme,\n      });\n      // Persist theme preference\n      localStorage.setItem('theme', theme);\n    },\n\n    // Notification actions\n    addNotification: (notification) => {\n      dispatch({\n        type: ActionTypes.ADD_NOTIFICATION,\n        payload: notification,\n      });\n    },\n\n    showSuccess: (message, options = {}) => {\n      actions.addNotification({\n        type: 'success',\n        message,\n        ...options,\n      });\n    },\n\n    showError: (message, options = {}) => {\n      actions.addNotification({\n        type: 'error',\n        message,\n        autoHide: false, // Errors don't auto-hide\n        ...options,\n      });\n    },\n\n    showWarning: (message, options = {}) => {\n      actions.addNotification({\n        type: 'warning',\n        message,\n        ...options,\n      });\n    },\n\n    showInfo: (message, options = {}) => {\n      actions.addNotification({\n        type: 'info',\n        message,\n        ...options,\n      });\n    },\n\n    removeNotification: (id) => {\n      dispatch({\n        type: ActionTypes.REMOVE_NOTIFICATION,\n        payload: id,\n      });\n    },\n\n    // Global state actions\n    setGlobalLoading: (loading) => {\n      dispatch({\n        type: ActionTypes.SET_GLOBAL_LOADING,\n        payload: loading,\n      });\n    },\n\n    setGlobalError: (error) => {\n      dispatch({\n        type: ActionTypes.SET_GLOBAL_ERROR,\n        payload: error,\n      });\n    },\n\n    clearGlobalError: () => {\n      dispatch({\n        type: ActionTypes.CLEAR_GLOBAL_ERROR,\n      });\n    },\n  };\n\n  // Initialize theme from localStorage\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme && savedTheme !== state.theme) {\n      actions.setTheme(savedTheme);\n    }\n  }, []);\n\n  // Context value\n  const contextValue = {\n    // State\n    ...state,\n    \n    // Actions\n    ...actions,\n    \n    // Computed values\n    isAuthenticated: !!user,\n    hasNotifications: state.notifications.length > 0,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Custom hook to use the app context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n\nexport default AppContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}