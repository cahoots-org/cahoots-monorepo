name: cahoots

services:
  master:
    build:
      context: .
      dockerfile: docker/master/Dockerfile
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./services:/app/services
      - ./libs:/app/libs
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
      - CORS_ORIGINS=["https://test.cahoots.cc", "http://test.cahoots.cc", "http://localhost:3000"]
      - GITHUB_CALLBACK_URL=https://test.cahoots.cc/auth/github/callback
      - PUBLIC_URL=https://test.cahoots.cc
      - ENVIRONMENT=development
      - DEBUG=true
      - PYTHONPATH=/app/services/api:/app/libs/core:/app/libs/events
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - cahoots-network

  web-client:
    build:
      context: .
      dockerfile: docker/web-client/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./web-client:/app
      - web_client_node_modules:/app/node_modules
    environment:
      - VITE_API_URL=https://test.cahoots.cc
      - VITE_PUBLIC_URL=https://test.cahoots.cc
      - VITE_GITHUB_CALLBACK_URL=https://test.cahoots.cc/auth/github/callback
      - VITE_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - HOST=0.0.0.0
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - cahoots-network

  ngrok:
    image: ngrok/ngrok:latest
    command: 
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok/ngrok.yml"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    networks:
      - cahoots-network
    depends_on:
      - web-client
      - master
    volumes:
      - ./ngrok.yml:/etc/ngrok/ngrok.yml

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cahoots-network

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    networks:
      - cahoots-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  web_client_node_modules:

networks:
  cahoots-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16 