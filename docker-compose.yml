version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  service:
    build:
      context: .
      dockerfile: docker/agents/developer.Dockerfile
    volumes:
      - ./packages/service:/app
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  web-client:
    build:
      context: .
      dockerfile: web-client/Dockerfile
    volumes:
      - ./web-client:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - service
    networks:
      - app-network

  master:
    build:
      context: .
      dockerfile: docker/agents/master.Dockerfile
    volumes:
      - ./packages/agents:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AGENT_TYPE=master
    depends_on:
      - redis
      - service
    networks:
      - app-network

  developer:
    build:
      context: .
      dockerfile: docker/agents/developer.Dockerfile
    volumes:
      - ./packages/agents:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AGENT_TYPE=developer
    depends_on:
      - redis
      - service
      - master
    networks:
      - app-network

  ux-designer:
    build:
      context: .
      dockerfile: docker/agents/ux-designer.Dockerfile
    volumes:
      - ./packages/agents:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AGENT_TYPE=ux-designer
    depends_on:
      - redis
      - service
      - master
    networks:
      - app-network

  project-manager:
    build:
      context: .
      dockerfile: docker/agents/project-manager.Dockerfile
    volumes:
      - ./packages/agents:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AGENT_TYPE=project-manager
    depends_on:
      - redis
      - service
      - master
    networks:
      - app-network

  tester:
    build:
      context: .
      dockerfile: docker/agents/tester.Dockerfile
    volumes:
      - ./packages/agents:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AGENT_TYPE=tester
    depends_on:
      - redis
      - service
      - master
    networks:
      - app-network

  context-manager:
    build:
      context: .
      dockerfile: docker/agents/context-manager.Dockerfile
    volumes:
      - ./packages/agents:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AGENT_TYPE=context-manager
    depends_on:
      - redis
      - service
      - master
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 