apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-dev-team
  labels:
    app: ai-dev-team
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-dev-team
  template:
    metadata:
      labels:
        app: ai-dev-team
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ai-dev-team
        image: ai-dev-team:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENV
          value: production
        - name: KUBERNETES_SERVICE_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: secrets
          mountPath: /config/secrets.yaml
          subPath: secrets.yaml
          readOnly: true
        - name: tls
          mountPath: /certs
          readOnly: true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: config
        configMap:
          name: ai-dev-team-config
      - name: secrets
        secret:
          secretName: ai-dev-team-secrets
      - name: tls
        secret:
          secretName: ai-dev-team-tls

---
apiVersion: v1
kind: Service
metadata:
  name: ai-dev-team
  labels:
    app: ai-dev-team
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: ai-dev-team 