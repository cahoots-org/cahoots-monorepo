apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: master-service
  labels:
    app.kubernetes.io/name: master-service
    app.kubernetes.io/part-of: cahoots
spec:
  template:
    metadata:
      labels:
        app: master-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: master-service
        image: cahoots/master:latest
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: secrets
          mountPath: /config/secrets.yaml
          subPath: secrets.yaml
          readOnly: true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: config
        configMap:
          name: cahoots-config
      - name: secrets
        secret:
          secretName: cahoots-secrets

---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: pm-service
  labels:
    app.kubernetes.io/name: pm-service
    app.kubernetes.io/part-of: cahoots
spec:
  template:
    metadata:
      labels:
        app: pm-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: pm-service
        image: cahoots/pm:latest
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: secrets
          mountPath: /config/secrets.yaml
          subPath: secrets.yaml
          readOnly: true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: config
        configMap:
          name: cahoots-config
      - name: secrets
        secret:
          secretName: cahoots-secrets

---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: developer-service
  labels:
    app.kubernetes.io/name: developer-service
    app.kubernetes.io/part-of: cahoots
spec:
  template:
    metadata:
      labels:
        app: developer-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: developer-service
        image: cahoots/developer:latest
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: secrets
          mountPath: /config/secrets.yaml
          subPath: secrets.yaml
          readOnly: true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: config
        configMap:
          name: cahoots-config
      - name: secrets
        secret:
          secretName: cahoots-secrets

---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: ux-service
  labels:
    app.kubernetes.io/name: ux-service
    app.kubernetes.io/part-of: cahoots
spec:
  template:
    metadata:
      labels:
        app: ux-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ux-service
        image: cahoots/ux:latest
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: secrets
          mountPath: /config/secrets.yaml
          subPath: secrets.yaml
          readOnly: true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: config
        configMap:
          name: cahoots-config
      - name: secrets
        secret:
          secretName: cahoots-secrets

---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: tester-service
  labels:
    app.kubernetes.io/name: tester-service
    app.kubernetes.io/part-of: cahoots
spec:
  template:
    metadata:
      labels:
        app: tester-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: tester-service
        image: cahoots/tester:latest
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: secrets
          mountPath: /config/secrets.yaml
          subPath: secrets.yaml
          readOnly: true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: config
        configMap:
          name: cahoots-config
      - name: secrets
        secret:
          secretName: cahoots-secrets 