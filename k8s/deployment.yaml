apiVersion: apps/v1
kind: Deployment
metadata:
  name: context-manager
  namespace: ai-dev-team
spec:
  replicas: 1
  selector:
    matchLabels:
      app: context-manager
  template:
    metadata:
      labels:
        app: context-manager
    spec:
      containers:
      - name: context-manager
        image: ai-dev-team/context-manager:latest
        imagePullPolicy: Never
        env:
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
        - name: POSTGRES_HOST
          value: "postgres"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: master
  namespace: ai-dev-team
spec:
  replicas: 1
  selector:
    matchLabels:
      app: master
  template:
    metadata:
      labels:
        app: master
    spec:
      containers:
      - name: master
        image: ai-dev-team/master:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        env:
        - name: REDIS_HOST
          value: "redis"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-manager
  namespace: ai-dev-team
spec:
  replicas: 1
  selector:
    matchLabels:
      app: project-manager
  template:
    metadata:
      labels:
        app: project-manager
    spec:
      containers:
      - name: project-manager
        image: ai-dev-team/project-manager:latest
        imagePullPolicy: Never
        env:
        - name: REDIS_HOST
          value: "redis"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: developer
  namespace: ai-dev-team
spec:
  replicas: 0  # Scaled by HPA
  selector:
    matchLabels:
      app: developer
  template:
    metadata:
      labels:
        app: developer
    spec:
      containers:
      - name: developer
        image: ai-dev-team/developer:latest
        imagePullPolicy: Never
        env:
        - name: REDIS_HOST
          value: "redis"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: developer-hpa
  namespace: ai-dev-team
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: developer
  minReplicas: 0
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: active_tasks
      target:
        type: AverageValue
        averageValue: 3
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ux-designer
  namespace: ai-dev-team
spec:
  replicas: 0  # Scaled by HPA
  selector:
    matchLabels:
      app: ux-designer
  template:
    metadata:
      labels:
        app: ux-designer
    spec:
      containers:
      - name: ux-designer
        image: ai-dev-team/ux-designer:latest
        imagePullPolicy: Never
        env:
        - name: REDIS_HOST
          value: "redis"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ux-designer-hpa
  namespace: ai-dev-team
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ux-designer
  minReplicas: 0
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: active_design_tasks
      target:
        type: AverageValue
        averageValue: 2
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 1
        periodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qa-tester
  namespace: ai-dev-team
spec:
  replicas: 0  # Scaled by HPA
  selector:
    matchLabels:
      app: qa-tester
  template:
    metadata:
      labels:
        app: qa-tester
    spec:
      containers:
      - name: qa-tester
        image: ai-dev-team/qa-tester:latest
        imagePullPolicy: Never
        env:
        - name: REDIS_HOST
          value: "redis"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: qa-tester-hpa
  namespace: ai-dev-team
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: qa-tester
  minReplicas: 0
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: active_test_suites
      target:
        type: AverageValue
        averageValue: 2
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 1
        periodSeconds: 30
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: ai-dev-team
spec:
  serviceName: redis
  replicas: 3  # Primary + 2 replicas
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7.0-alpine
        command: ["redis-server"]
        args:
        - "/etc/redis/redis.conf"
        - "--protected-mode"
        - "no"
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: ai-dev-team
data:
  redis.conf: |
    appendonly yes
    appendfsync everysec
    no-appendfsync-on-rewrite yes
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    
    # Replication
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync yes
    repl-diskless-sync-delay 5
    repl-timeout 60
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Memory management
    maxmemory 768mb
    maxmemory-policy allkeys-lru
    
    # Security
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    rename-command DEBUG ""
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: ai-dev-team
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        env:
        - name: POSTGRES_DB
          value: ai_dev_team
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: master
  namespace: ai-dev-team
spec:
  selector:
    app: master
  ports:
  - port: 8000
    targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: ai-dev-team
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ai-dev-team
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432 