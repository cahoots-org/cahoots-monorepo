apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
  namespace: cahoots
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-redis
  namespace: cahoots
spec:
  podSelector:
    matchLabels:
      app: redis
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: master
    ports:
    - protocol: TCP
      port: 6379
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-postgres
  namespace: cahoots
spec:
  podSelector:
    matchLabels:
<<<<<<< Updated upstream
      app: postgres
=======
      app: db
  policyTypes:
    - Ingress
    - Egress
>>>>>>> Stashed changes
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: master
    ports:
    - protocol: TCP
      port: 5432
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: cahoots
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-role
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-role
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: cahoots
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cahoots
  namespace: cahoots
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: redis-pdb
  namespace: cahoots
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: redis
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: postgres-pdb
  namespace: cahoots
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: db
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-logging
  namespace: cahoots
spec:
  podSelector:
    matchLabels:
      app: elasticsearch
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: fluentd
    ports:
    - protocol: TCP
      port: 9200
    - protocol: TCP
      port: 9300
  - from:
    - podSelector:
        matchLabels:
          app: kibana
    ports:
    - protocol: TCP
      port: 9200
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kibana
  namespace: cahoots
spec:
  podSelector:
    matchLabels:
      app: kibana
  ingress:
  - ports:
    - protocol: TCP
<<<<<<< Updated upstream
      port: 5601 
=======
      port: 5601
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-master-postgres
  namespace: cahoots
spec:
  podSelector:
    matchLabels:
      app: master
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: db
    ports:
    - protocol: TCP
      port: 5432
  policyTypes:
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-api-traffic
  namespace: cahoots
spec:
  podSelector:
    matchLabels:
      app: api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: cahoots
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app: db
    ports:
    - protocol: TCP
      port: 5432
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-master-traffic
  namespace: cahoots
spec:
  podSelector:
    matchLabels:
      app: master
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app: db
    ports:
    - protocol: TCP
      port: 5432
  # Allow DNS resolution
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-redis-traffic
  namespace: cahoots
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api
    - podSelector:
        matchLabels:
          app: master
    ports:
    - protocol: TCP
      port: 6379
>>>>>>> Stashed changes
